names(deuxlignes)<-names(iris)
deuxlignes
reslign<-rbind(deuxlignes,iris)
head(reslign)
View(reslign)
View(reslign)
View(deuxlignes)
ConjointGagnePlus <- c(Conjoint>Chef)
ConjointGagnePlus
menage2<-rbind(menage,ConjointGagnePlus)
View(menage2)
menage2<-cbind(menage,ConjointGagnePlus)
menage<-cbind(menage,ConjointGagnePlus)
Chef2 <- c(NA, 1180, 1750, 2100)
Conjoint2 <- c(1450, NA, 1690, NA)
NbPersonnes2 <-c(4,2,3,2)
RevenuParTete2 <- (Conjoint2 +Chef2)/NbPersonnes2
RevenuParTete2 <- (Conjoint2 +Chef2)/NbPersonnes2
RevenuMax2 <- max(Chef2)
RevenuMin2 <- min(Chef2)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
View(menage2)
RevenuParTete2 <- sum(Conjoint2,Chef2,na.rm =TRUE)/NbPersonnes2
RevenuParTete2 <- sum(Conjoint2,Chef2,na.rm =TRUE)/NbPersonnes2
RevenuMax2 <- max(Chef2,na.rm=TRUE)
RevenuMin2 <- min(Chef2,na.rm=TRUE)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage<-cbind(menage2,ConjointGagnePlus2)
menage<-cbind(menage2,ConjointGagnePlus2,na.rm=TRUE)
menage<-cbind(menage2,ConjointGagnePlus2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
menage<-cbind(menage2,ConjointGagnePlus2)
View(menage2)
menage2<-cbind(menage2,ConjointGagnePlus2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage2<-cbind(menage2,ConjointGagnePlus2)
Chef <- c(1200, 1180, 1750, 2100)
Conjoint <- c(1450, 1850, 1690, 0)
NbPersonnes <-c(4,2,3,2)
RevenuParTete <- (Conjoint +Chef)/NbPersonnes
RevenuMax <- max(Chef)
RevenuMin <- min(Chef)
menage <- data.frame(Chef,Conjoint,NbPersonnes,RevenuParTete)
ConjointGagnePlus <- c(Conjoint>Chef)
menage<-cbind(menage,ConjointGagnePlus)
rownames(menage)<- paste("menage_",1:4,"")
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
Chef2 <- c(NA, 1180, 1750, 2100)
Conjoint2 <- c(1450, NA, 1690, NA)
NbPersonnes2 <-c(4,2,3,2)
RevenuParTete2 <- sum(Conjoint2,Chef2,na.rm =TRUE)/NbPersonnes2
RevenuMax2 <- max(Chef2,na.rm=TRUE)
RevenuMin2 <- min(Chef2,na.rm=TRUE)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage2<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
ConjointGagnePlus2 <- c(lenght(Conjoint2>Chef2,na.rm=TRUE))
ConjointGagnePlus2 <- c((Conjoint2>Chef2,na.rm=TRUE))
na.rm=TRUE
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage2<-cbind(menage2,ConjointGagnePlus2)
na.rm=TRUE
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage2<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2,na.rm=TRUE)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage2<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
install.packages("GDAtools")
library(GDATools)
library(GDATools)
library(GDATools)
library("GDAtools", lib.loc="~/R/win-library/3.2")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library("GDAtools", lib.loc="~/R/win-library/3.2")
install.packages("GDAtools")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library(GDATools)
library(GDAtools)
library("GDAtools", lib.loc="~/R/win-library/3.2")
install.packages("GDAtools")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library(GDAtools)
install.packages("flashClust")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/flashClust_1.01-2.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library(flashClust)
library(stats)
library(flashClust)
library(GDAtools)
install.packages("tm")
install.packages("topicmodels")
install.packages("wordcloud")
install.packages("tm")
install.packages("C:/Users/sarah/AppData/Local/Temp/Rtmp2ztZnI/downloaded_packages/tm_0.6-2.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/Rtmp2ztZnI/downloaded_packages/topicmodels_0.2-2.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/Rtmp2ztZnI/downloaded_packages/wordcloud_2.5.zip", repos = NULL, type = "win.binary")
lenght(1:70) "longueur de l'objet"
mean(1:70)
lenght(1:70) #longueur de l'objet
mean(1:70)
length(1:70) #longueur de l'objet
mean(1:70)
median(1:70)
seq(1,70, by=3, length =10)
seq(1,70,length =10)
length("bb",'cc,"dd')
length("bb","cc","dd")
length(c("bb","cc","dd"))
c("bb","cc","dd")=="Yvonne"
sexe <-c("H","F","F","H")
sexe.f <- factor(sexe)
sexe.f.b <- factor(c(2,1,1,2),labels=c("femme","homme"))
age <- c("34","43","56","45")
age <- as.numeric(age)
#associer un attribut
age
prenoms<-c("naouek","roger","monique", "redha")
names(age)<-prenoms
prenoms
age <- c("34","43","56","45")
age <- as.numeric(age)
age <- c("34","43","56","45")
age
prenoms<-c("naoufel","roger","monique", "redha")
names(age)<-prenoms
age
prenoms
age <- c("34","43","56","45")
age <- as.numeric(age)
#associer un attribut
age
prenoms<-c("naoufel","roger","monique", "redha")
names(age)<-prenoms
age
age["Naoufel"]
age["Naoufel"]
names(age)<-prenoms
age["Naoufel"]
age
age
prenoms<-c("naoufel","roger","monique", "redha")
names(age)<-prenoms
age["naoufel"]
mat.d[c(2,3),c(1,3)]
mat.a <- matrix(1:15,nrow=3)
mat.b <- matrix(1:15, nrow=3,ncol=4)
mat.c <-matrix(1:4,nrow=3,ncol=4)
mat.d <- matrix(1:4,nrow=3,ncol=4,byrow=T)
mat.d[c(2,3),c(1,3)]
library(foreign)
mydata = read.dta("http://dss.princeton.edu/training/Panel101.dta")
View(mydata)
View(mydata)
View(mydata)
mydata$time = ifelse(mydata$year >= 1994, 1, 0)
mydata$treated = ifelse(mydata$country == "E" |
mydata$country == "F" |
mydata$country == "G", 1, 0)
mydata$did = mydata$time * mydata$treated
didreg = lm(y ~ treated + time + did, data = mydata)
summary(didreg)
didreg1 = lm(y ~ treated*time, data = mydata)
summary(didreg1)
install.packages("igraph")
install.packages("sna")
install.packages("matrix")
install.packages("Matrix")
install.package("systemfit")
install.packages("systemfit")
install.packages("AER")
install.packages("plm")
install.packages("pglm")
install.packages("lfe")
n <- 100000
instr <-rnorm(n)
x<-4*instr+rnorm(n)
inobs <-rnorm(n)
y<- 4+x+7*inobs+rnorm(n)
summary(r1)
r1 <- lm(y~x+inobs)
summary(r1)
r2<-lm(y~x)
summary(r2)
n <- 100000
instr <-rnorm(n)
inobs <-rnorm(n)
x<-4*instr+5*inobs+rnorm(n)
y<- 4+x+7*inobs+rnorm(n)
#régresssion avec toute l'information
r1 <- lm(y~x+inobs)
summary(r1)
#régression sans toute l'information
r2<-lm(y~x)
summary(r2)
e1 <- lm(x~instr)
summary(e1)
e1 <- lm(x~instr)
summary(e1)
str(e1)
e2 <- lm(y~e1$fitted.values)
summary(e2)
library("foreign")
gm<- read.xport("C:/Users/sarah/Google Drive/Econométrie pour sociologues/L2_Variables_instrumentales/gm2.xpt")
str(gm)
gm2 <- gm[gm$DEMENAG==0,]
table(gm$NAI)
table(gm$NAIMN,gm$RET15)
prop.table(table(gm$NAIMN,gm$RET15))
prop.table(table(gm$NAIMN,gm$RET15),1)
naif<- lm(RET15~VRET15+S1,data=gm2)
naif
summary(naif)
e1<- lm(VRET15~VJANMAY+VJUNNOV+S1, data=gm2) #on remet toutes les variables explicatives
summary(e1)
e2 <- lm(gm2$RET15~e1$fitted.values+gm2$s1)
e2 <- lm(RET15~e1$fitted.values+s1, data=gm2[is.na(gm2$VRET15)==0,])
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2[is.na(gm2$VRET15)==0,])
gm2 <- gm[gm$DEMENAG==0 & gm$QUINZE==1 & is.na(gm$VJANMAY)==0,]
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2[is.na(gm2$VRET15)==0,])
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2,])
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2)
summary(e2)
library(AER)
summary(iv)
iv <- ivreg(RET15~VRET15+S1|VJANMAY+VJUNNOV+S1, data=gm2)
summary(iv)
summary(iv,diagnostics = T)
gm3 <- gm[gm$DEMENAG==0 & gm$QUINZEB==1 & is.na(gm$VJANMAY)==0,]
str(gm3)
s1 <- lm (VRET15~VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor())
s1 <- lm (VRET15~VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor(AN),data=gm3)
str(s1)
summary(s1)
naive<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1,data=gm3)
naive<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1,data=gm3)
summary(naive)
iv<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1 +VJANMAY+VJUNNOV+JANMAY+JUNNOV
,data=gm3)
summary(iv)
iv<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1|VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor(AN)
+S1+ETR1
,data=gm3)
iv<-ivreg (RET16~VRET15+RET15+factor(AN)+S1+ETR1|VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor(AN)
+S1+ETR1
,data=gm3)
summary(iv)
install.packages(c('TraMineR'))
library(TraMineR)
for (k in (0:(n-1)){
A<-A+(1/2)*sin((2*3.14)/n)*(1+(k/n)*(1+((k+1)/n))
}
for (k in (0:(n-1)){
A<-A+(1/2)*sin((2*3.14)/n)*(1+(k/n)*(1+((k+1)/n)))
}
for (k in (0:(n-1)){
A<-A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
}
for (k in (0:(n-1)){
for (k in (0:(n-1)))
{
A <- A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
}
n<-10
A<-0
k<-0
for (k in (0:(n-1)))
{
A <- A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
}
A
n<-3
A<-0
k<-0
for (k in (0:(n-1)))
{
A <- A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
}
A
n<-10
A<-0
k<-0
for (k in (0:(n-1)))
{
A <- A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
k
}
A
for (k in (0:(n-1)))
{
A <- A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
A
}
A
n<-10
A<-0
k<-0
for (k in (0:(n-1)))
{
A <- A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
}
A
for (k in (0:(n-1)))
{
A <- A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
A
n<-10
A<-0
k<-0
for (k in (0:(n-1)))
{
A <- A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
A
}
A
for (k in (0:(n-1)))
{
A <- A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
A
}
A
n<-10
A<-0
k<-0
for (k in (0:(n-1)))
{
A <- A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
A
}
A
n<-10
A<-0
k<-0
for (k in (0:(n-1)))
{
A <- A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
A
}
A
rm(list=ls())
chemin <- "C:/Users/sarah/Desktop/Tele-Repas-Socstat"
setwd(chemin)
enq.final <- read.csv2("./DATA_BDD-RECONCILIE/enq final_08.csv", header=T)
table(enq.final$clust5, useNA = "ifany")
t<-table(enq.final$clust5, enq.final$D13_re)
t
#FONCTION de tableau croisés
tab.crois <-function(colonne,ligne,enligne=T,chi=F){
tab.f<-table(ligne, colonne)
tab.m<-addmargins(tab.f)
if(enligne==T){
tab.t <- prop.table(tab.m[-nrow(tab.m),-ncol(tab.m)],1)
tab.t <- round(tab.t,4)
tab.t <- tab.t*100
tab.e <- round(prop.table(table(colonne)),4)*100
tab<-rbind(tab.t,Total=tab.e)
tab<-addmargins(tab,2)
tab[,ncol(tab)]<-round(tab[,ncol(tab)],0)
colnames(tab)[ncol(tab)]<-"Total"
tab <- cbind(tab,"Effectifs"=round(tab.m[,ncol(tab.m)],0))
}else{
tab.t <- prop.table(tab.m[-nrow(tab.m),-ncol(tab.m)],2)
tab.t <- round(tab.t,4)
tab.t <- tab.t*100
tab.e <- round(prop.table(table(ligne)),4)*100
tab<-cbind(tab.t,Total=tab.e)
tab<-addmargins(tab,1)
tab[nrow(tab),]<-round(tab[nrow(tab),],0)
rownames(tab)[nrow(tab)]<-"Total"
tab <- rbind(tab,"Effectifs"=round(tab.m[nrow(tab.m),],0))
}
nom<-paste("tableau croise")
res<-list()
if(chi==F)  {
res <- list(nom,tab)
}
else{
chi.tab <-unlist(chisq.test(tab.f)[c(1,3)])
res<- list(nom,tab,"chi-deux"=chi.tab)
return(res)}
}
library(questionr)
t<- tab.crois(enq.final$D13_re,enq.final$clust4)
t<- tab.crois(enq.final$D13_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D13_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D13_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$age_calage,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$,enq.final$clust5)
t
t<- tab.crois(enq.final$A1,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A12_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A12_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A3_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A13_3_re,enq.final$clust5)
t
copie(t)
copie(t)
t<- tab.crois(enq.final$A13_1_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A13_5_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A14_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A13_4_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A15_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A16_re,enq.final$clust5)
t
t<- tab.crois(enq.final$A7_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$HA3_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A11_1_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A11_2_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A11_3_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A11_4_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A4_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A8_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A9_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A10_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D3_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D6_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D9_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D13_re,enq.final$clust5)
t
t<- tab.crois(enq.final$D8_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A13_2_re,enq.final$clust5)
t
t<- tab.crois(enq.final$A13_2_re,enq.final$clust5)
t<- tab.crois(enq.final$A13_2_re,enq.final$clust5)
t<- tab.crois(enq.final$A13_2_re,enq.final$clust5)
t<- tab.crois(enq.final$A13_2_re,enq.final$clust5)
enq.final$A13_2_re
t<- tab.crois(enq.final$A1,enq.final$clust5)
t
copie(t)
copie(t)
t<- tab.crois(enq.final$dummy.panel,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D13_re,enq.final$clust5,chi=T)
t
copie(t)
t<- tab.crois(enq.final$age_calage,enq.final$clust5, chi=T)
t
