<<<<<<< Updated upstream
names(deuxlignes)<-names(iris)
deuxlignes
reslign<-rbind(deuxlignes,iris)
head(reslign)
View(reslign)
View(reslign)
View(deuxlignes)
ConjointGagnePlus <- c(Conjoint>Chef)
ConjointGagnePlus
menage2<-rbind(menage,ConjointGagnePlus)
View(menage2)
menage2<-cbind(menage,ConjointGagnePlus)
menage<-cbind(menage,ConjointGagnePlus)
Chef2 <- c(NA, 1180, 1750, 2100)
Conjoint2 <- c(1450, NA, 1690, NA)
NbPersonnes2 <-c(4,2,3,2)
RevenuParTete2 <- (Conjoint2 +Chef2)/NbPersonnes2
RevenuParTete2 <- (Conjoint2 +Chef2)/NbPersonnes2
RevenuMax2 <- max(Chef2)
RevenuMin2 <- min(Chef2)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
View(menage2)
RevenuParTete2 <- sum(Conjoint2,Chef2,na.rm =TRUE)/NbPersonnes2
RevenuParTete2 <- sum(Conjoint2,Chef2,na.rm =TRUE)/NbPersonnes2
RevenuMax2 <- max(Chef2,na.rm=TRUE)
RevenuMin2 <- min(Chef2,na.rm=TRUE)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage<-cbind(menage2,ConjointGagnePlus2)
menage<-cbind(menage2,ConjointGagnePlus2,na.rm=TRUE)
menage<-cbind(menage2,ConjointGagnePlus2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
menage<-cbind(menage2,ConjointGagnePlus2)
View(menage2)
menage2<-cbind(menage2,ConjointGagnePlus2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage2<-cbind(menage2,ConjointGagnePlus2)
Chef <- c(1200, 1180, 1750, 2100)
Conjoint <- c(1450, 1850, 1690, 0)
NbPersonnes <-c(4,2,3,2)
RevenuParTete <- (Conjoint +Chef)/NbPersonnes
RevenuMax <- max(Chef)
RevenuMin <- min(Chef)
menage <- data.frame(Chef,Conjoint,NbPersonnes,RevenuParTete)
ConjointGagnePlus <- c(Conjoint>Chef)
menage<-cbind(menage,ConjointGagnePlus)
rownames(menage)<- paste("menage_",1:4,"")
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
Chef2 <- c(NA, 1180, 1750, 2100)
Conjoint2 <- c(1450, NA, 1690, NA)
NbPersonnes2 <-c(4,2,3,2)
RevenuParTete2 <- sum(Conjoint2,Chef2,na.rm =TRUE)/NbPersonnes2
RevenuMax2 <- max(Chef2,na.rm=TRUE)
RevenuMin2 <- min(Chef2,na.rm=TRUE)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage2<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
ConjointGagnePlus2 <- c(lenght(Conjoint2>Chef2,na.rm=TRUE))
ConjointGagnePlus2 <- c((Conjoint2>Chef2,na.rm=TRUE))
na.rm=TRUE
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage2<-cbind(menage2,ConjointGagnePlus2)
na.rm=TRUE
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage2<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2,na.rm=TRUE)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage2<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
install.packages("GDAtools")
library(GDATools)
library(GDATools)
library(GDATools)
library("GDAtools", lib.loc="~/R/win-library/3.2")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library("GDAtools", lib.loc="~/R/win-library/3.2")
install.packages("GDAtools")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library(GDATools)
library(GDAtools)
library("GDAtools", lib.loc="~/R/win-library/3.2")
install.packages("GDAtools")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library(GDAtools)
install.packages("flashClust")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/flashClust_1.01-2.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library(flashClust)
library(stats)
library(flashClust)
library(GDAtools)
install.packages("tm")
install.packages("topicmodels")
install.packages("wordcloud")
install.packages("tm")
install.packages("C:/Users/sarah/AppData/Local/Temp/Rtmp2ztZnI/downloaded_packages/tm_0.6-2.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/Rtmp2ztZnI/downloaded_packages/topicmodels_0.2-2.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/Rtmp2ztZnI/downloaded_packages/wordcloud_2.5.zip", repos = NULL, type = "win.binary")
lenght(1:70) "longueur de l'objet"
mean(1:70)
lenght(1:70) #longueur de l'objet
mean(1:70)
length(1:70) #longueur de l'objet
mean(1:70)
median(1:70)
seq(1,70, by=3, length =10)
seq(1,70,length =10)
length("bb",'cc,"dd')
length("bb","cc","dd")
length(c("bb","cc","dd"))
c("bb","cc","dd")=="Yvonne"
sexe <-c("H","F","F","H")
sexe.f <- factor(sexe)
sexe.f.b <- factor(c(2,1,1,2),labels=c("femme","homme"))
age <- c("34","43","56","45")
age <- as.numeric(age)
#associer un attribut
age
prenoms<-c("naouek","roger","monique", "redha")
names(age)<-prenoms
prenoms
age <- c("34","43","56","45")
age <- as.numeric(age)
age <- c("34","43","56","45")
age
prenoms<-c("naoufel","roger","monique", "redha")
names(age)<-prenoms
age
prenoms
age <- c("34","43","56","45")
age <- as.numeric(age)
#associer un attribut
age
prenoms<-c("naoufel","roger","monique", "redha")
names(age)<-prenoms
age
age["Naoufel"]
age["Naoufel"]
names(age)<-prenoms
age["Naoufel"]
age
age
prenoms<-c("naoufel","roger","monique", "redha")
names(age)<-prenoms
age["naoufel"]
mat.d[c(2,3),c(1,3)]
mat.a <- matrix(1:15,nrow=3)
mat.b <- matrix(1:15, nrow=3,ncol=4)
mat.c <-matrix(1:4,nrow=3,ncol=4)
mat.d <- matrix(1:4,nrow=3,ncol=4,byrow=T)
mat.d[c(2,3),c(1,3)]
library(foreign)
mydata = read.dta("http://dss.princeton.edu/training/Panel101.dta")
View(mydata)
View(mydata)
View(mydata)
mydata$time = ifelse(mydata$year >= 1994, 1, 0)
mydata$treated = ifelse(mydata$country == "E" |
mydata$country == "F" |
mydata$country == "G", 1, 0)
mydata$did = mydata$time * mydata$treated
didreg = lm(y ~ treated + time + did, data = mydata)
summary(didreg)
didreg1 = lm(y ~ treated*time, data = mydata)
summary(didreg1)
install.packages("igraph")
install.packages("sna")
install.packages("matrix")
install.packages("Matrix")
install.package("systemfit")
install.packages("systemfit")
install.packages("AER")
install.packages("plm")
install.packages("pglm")
install.packages("lfe")
n <- 100000
instr <-rnorm(n)
x<-4*instr+rnorm(n)
inobs <-rnorm(n)
y<- 4+x+7*inobs+rnorm(n)
summary(r1)
r1 <- lm(y~x+inobs)
summary(r1)
r2<-lm(y~x)
summary(r2)
n <- 100000
instr <-rnorm(n)
inobs <-rnorm(n)
x<-4*instr+5*inobs+rnorm(n)
y<- 4+x+7*inobs+rnorm(n)
#régresssion avec toute l'information
r1 <- lm(y~x+inobs)
summary(r1)
#régression sans toute l'information
r2<-lm(y~x)
summary(r2)
e1 <- lm(x~instr)
summary(e1)
e1 <- lm(x~instr)
summary(e1)
str(e1)
e2 <- lm(y~e1$fitted.values)
summary(e2)
library("foreign")
gm<- read.xport("C:/Users/sarah/Google Drive/Econométrie pour sociologues/L2_Variables_instrumentales/gm2.xpt")
str(gm)
gm2 <- gm[gm$DEMENAG==0,]
table(gm$NAI)
table(gm$NAIMN,gm$RET15)
prop.table(table(gm$NAIMN,gm$RET15))
prop.table(table(gm$NAIMN,gm$RET15),1)
naif<- lm(RET15~VRET15+S1,data=gm2)
naif
summary(naif)
e1<- lm(VRET15~VJANMAY+VJUNNOV+S1, data=gm2) #on remet toutes les variables explicatives
summary(e1)
e2 <- lm(gm2$RET15~e1$fitted.values+gm2$s1)
e2 <- lm(RET15~e1$fitted.values+s1, data=gm2[is.na(gm2$VRET15)==0,])
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2[is.na(gm2$VRET15)==0,])
gm2 <- gm[gm$DEMENAG==0 & gm$QUINZE==1 & is.na(gm$VJANMAY)==0,]
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2[is.na(gm2$VRET15)==0,])
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2,])
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2)
summary(e2)
library(AER)
summary(iv)
iv <- ivreg(RET15~VRET15+S1|VJANMAY+VJUNNOV+S1, data=gm2)
summary(iv)
summary(iv,diagnostics = T)
gm3 <- gm[gm$DEMENAG==0 & gm$QUINZEB==1 & is.na(gm$VJANMAY)==0,]
str(gm3)
s1 <- lm (VRET15~VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor())
s1 <- lm (VRET15~VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor(AN),data=gm3)
str(s1)
summary(s1)
naive<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1,data=gm3)
naive<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1,data=gm3)
summary(naive)
iv<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1 +VJANMAY+VJUNNOV+JANMAY+JUNNOV
,data=gm3)
summary(iv)
iv<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1|VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor(AN)
+S1+ETR1
,data=gm3)
iv<-ivreg (RET16~VRET15+RET15+factor(AN)+S1+ETR1|VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor(AN)
+S1+ETR1
,data=gm3)
summary(iv)
install.packages(c('TraMineR'))
library(TraMineR)
for (k in (0:(n-1)){
A<-A+(1/2)*sin((2*3.14)/n)*(1+(k/n)*(1+((k+1)/n))
=======
# Console
for(i in 1:nrow(enq.final)){
if(enq.final$E6_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E6_a_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E6_b_re[i] %in% c('Souvent', 'Très souvent')){
enq.final$E6_Typologie_utilisateurs[i] <- 'Utilisateur régulier'
} else {
enq.final$E6_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
>>>>>>> Stashed changes
}
} else {
enq.final$E6_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E6_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
}
# Ordinateur portable
for(i in 1:nrow(enq.final)){
if(enq.final$E7_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E7_a_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E7_b_re[i] %in% c('Souvent', 'Très souvent')){
enq.final$E7_Typologie_utilisateurs[i] <- 'Utilisateur régulier'
} else {
enq.final$E7_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E7_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E7_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
}
# Ordinateur fixe
for(i in 1:nrow(enq.final)){
if(enq.final$E8_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E8_a_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E8_b_re[i] %in% c('Souvent', 'Très souvent')){
enq.final$E8_Typologie_utilisateurs[i] <- 'Utilisateur régulier'
} else {
enq.final$E8_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E8_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E8_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
}
<<<<<<< Updated upstream
A
n<-10
A<-0
k<-0
for (k in (0:(n-1)))
{
A <- A+(1/2)*sin((2*3.14)/n)*(1+(k/n))*(1+((k+1)/n))
A
}
A
rm(list=ls())
chemin <- "C:/Users/sarah/Desktop/Tele-Repas-Socstat"
setwd(chemin)
enq.final <- read.csv2("./DATA_BDD-RECONCILIE/enq final_08.csv", header=T)
table(enq.final$clust5, useNA = "ifany")
t<-table(enq.final$clust5, enq.final$D13_re)
t
#FONCTION de tableau croisés
tab.crois <-function(colonne,ligne,enligne=T,chi=F){
tab.f<-table(ligne, colonne)
tab.m<-addmargins(tab.f)
if(enligne==T){
tab.t <- prop.table(tab.m[-nrow(tab.m),-ncol(tab.m)],1)
tab.t <- round(tab.t,4)
tab.t <- tab.t*100
tab.e <- round(prop.table(table(colonne)),4)*100
tab<-rbind(tab.t,Total=tab.e)
tab<-addmargins(tab,2)
tab[,ncol(tab)]<-round(tab[,ncol(tab)],0)
colnames(tab)[ncol(tab)]<-"Total"
tab <- cbind(tab,"Effectifs"=round(tab.m[,ncol(tab.m)],0))
}else{
tab.t <- prop.table(tab.m[-nrow(tab.m),-ncol(tab.m)],2)
tab.t <- round(tab.t,4)
tab.t <- tab.t*100
tab.e <- round(prop.table(table(ligne)),4)*100
tab<-cbind(tab.t,Total=tab.e)
tab<-addmargins(tab,1)
tab[nrow(tab),]<-round(tab[nrow(tab),],0)
rownames(tab)[nrow(tab)]<-"Total"
tab <- rbind(tab,"Effectifs"=round(tab.m[nrow(tab.m),],0))
}
nom<-paste("tableau croise")
res<-list()
if(chi==F)  {
res <- list(nom,tab)
}
else{
chi.tab <-unlist(chisq.test(tab.f)[c(1,3)])
res<- list(nom,tab,"chi-deux"=chi.tab)
return(res)}
}
library(questionr)
t<- tab.crois(enq.final$D13_re,enq.final$clust4)
t<- tab.crois(enq.final$D13_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D13_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D13_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$age_calage,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$,enq.final$clust5)
t
t<- tab.crois(enq.final$A1,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A12_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A12_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A3_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A13_3_re,enq.final$clust5)
t
copie(t)
copie(t)
t<- tab.crois(enq.final$A13_1_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A13_5_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A14_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A13_4_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A15_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A16_re,enq.final$clust5)
t
t<- tab.crois(enq.final$A7_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$HA3_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A11_1_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A11_2_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A11_3_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A11_4_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A4_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A8_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A9_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A10_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D3_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D6_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D9_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D13_re,enq.final$clust5)
t
t<- tab.crois(enq.final$D8_re,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$A13_2_re,enq.final$clust5)
t
t<- tab.crois(enq.final$A13_2_re,enq.final$clust5)
t<- tab.crois(enq.final$A13_2_re,enq.final$clust5)
t<- tab.crois(enq.final$A13_2_re,enq.final$clust5)
t<- tab.crois(enq.final$A13_2_re,enq.final$clust5)
enq.final$A13_2_re
t<- tab.crois(enq.final$A1,enq.final$clust5)
t
copie(t)
copie(t)
t<- tab.crois(enq.final$dummy.panel,enq.final$clust5)
t
copie(t)
t<- tab.crois(enq.final$D13_re,enq.final$clust5,chi=T)
t
copie(t)
t<- tab.crois(enq.final$age_calage,enq.final$clust5, chi=T)
t
=======
# Verifications effectifs
table(enq.final$E2_Typologie_utilisateurs)
round(prop.table(table(enq.final$E2_Typologie_utilisateurs))*100,3)
table(enq.final$E3_Typologie_utilisateurs)
round(prop.table(table(enq.final$E3_Typologie_utilisateurs))*100,3)
table(enq.final$E4_Typologie_utilisateurs)
round(prop.table(table(enq.final$E4_Typologie_utilisateurs))*100,3)
table(enq.final$E5_Typologie_utilisateurs)
round(prop.table(table(enq.final$E5_Typologie_utilisateurs))*100,3)
table(enq.final$E6_Typologie_utilisateurs)
round(prop.table(table(enq.final$E6_Typologie_utilisateurs))*100,3)
table(enq.final$E7_Typologie_utilisateurs)
round(prop.table(table(enq.final$E7_Typologie_utilisateurs))*100,3)
table(enq.final$E8_Typologie_utilisateurs)
round(prop.table(table(enq.final$E8_Typologie_utilisateurs))*100,3)
## Recodages
# Sexe
table(enq.final$D13_re)
# Age en tranches
enq.final$D1_tr[enq.final$D1_re < 25] <- "moins de 25 ans"
enq.final$D1_tr[enq.final$D1_re %in% c(25:45)] <- "25-45 ans"
enq.final$D1_tr[enq.final$D1_re %in% c(45:65)] <- "46-65 ans"
enq.final$D1_tr[enq.final$D1_re > 65] <- "plus de 65 ans"
summary(enq.final$D1_tr)
table(enq.final$D1_tr)
# Diplome simplifié
table(enq.final$D3_re)
enq.final$D3_re2[as.character(enq.final$D3_re) %in% c("Aucun diplôme", "BEPC, brevet", "CAP, BEP","Certificat d’études primaires")] <- "Inférieur au bac"
enq.final$D3_re2[as.character(enq.final$D3_re) == "Baccalauréat, BP"] <- "Bac"
enq.final$D3_re2[as.character(enq.final$D3_re) %in% c("Deug, DUT, BTS, diplômes des professions sociales ou de la santé","Licence, Bac+3","Bac+4 ou plus : Master, maîtrise, DEA, école d'ingénieur, doctorat etc.")] <- "Supérieur au bac"
enq.final$D3_re2[as.character(enq.final$D3_re) == "Refus"] <- NA
summary(enq.final$D3_re2)
table(enq.final$D3_re2)
# Diplome du conjoin simplifié:
table(enq.final$D3_bis_re)
enq.final$D3_re2[as.character(enq.final$D3_bis_re) %in% c("Aucun diplôme", "BEPC, brevet", "CAP, BEP","Certificat d’études primaires")] <- "Inférieur au bac"
enq.final$D3_re2[as.character(enq.final$D3_bis_re) == "Baccalauréat, BP"] <- "Bac"
enq.final$D3_re2[as.character(enq.final$D3_bis_re) %in% c("Deug, DUT, BTS, diplômes des professions sociales ou de la santé","Licence, Bac+3","Bac+4 ou plus : Master, maîtrise, DEA, école d'ingénieur, doctorat etc.")] <- "Supérieur au bac"
enq.final$D3_re2[as.character(enq.final$D3_bis_re) == "Refus"] <- NA
summary(enq.final$D3_re2)
table(enq.final$D3_re2)
# activité (utilité? plutot utiliser la CSP?)
table(enq.final$D4_re)
enq.final$D4_re2[as.character(enq.final$D4_re) %in% c("Etudiant avec emploi", "Etudiant sans emploi")] <- "Etudiant"
enq.final$D4_re2[as.character(enq.final$D4_re) %in% c("Emploi à plein temps", "Emploi à temps partiel")] <- "Emploi"
enq.final$D4_re2[as.character(enq.final$D4_re) == "A la retraite"] <- "retraite"
enq.final$D4_re2[as.character(enq.final$D4_re) == "En recherche d'emploi"] <- "recherche emploi"
enq.final$D4_re2[as.character(enq.final$D4_re) == "Au foyer"] <- "Au foyer"
enq.final$D4_re2[as.character(enq.final$D4_re) == "Autre (voir D4_other_re)"] <- NA
summary(enq.final$D4_re2)
table(enq.final$D4_re2)
# activité du conjoint - utilité?
table(enq.final$D7_re)
enq.final$D7_re2[as.character(enq.final$D7_re) %in% c("Etudiant avec emploi", "Etudiant sans emploi")] <- "étudiants"
enq.final$D7_re2[as.character(enq.final$D7_re) %in% c("Emploi à plein temps", "Emploi à temps partiel")] <- "Emploi"
enq.final$D7_re2[as.character(enq.final$D7_re) == "A la retraite"] <- "retraite"
enq.final$D7_re2[as.character(enq.final$D7_re) == "En recherche d’emploi"] <- "recherche emploi"
enq.final$D7_re2[as.character(enq.final$D7_re) == "Au foyer"] <- "Au foyer"
enq.final$D7_re2[as.character(enq.final$D7_re) == "Autre (voir D4_other_re)"] <- NA
summary(enq.final$D7_re2)
table(enq.final$D7_re2)
# Composition du menage aggregée
table(enq.final$D6_re)
enq.final$D6_re2[as.character(enq.final$D6_re) == "Vous uniquement"] <- "Seul"
enq.final$D6_re2[as.character(enq.final$D6_re) %in% c("Vous et votre conjoint(e), avec un ou plusieurs enfant(s)", "Vous et un ou plusieurs enfant(s)")] <- "Parent(s) avec enfants"
enq.final$D6_re2[as.character(enq.final$D6_re) %in% c("Autre (voir D6_other_re)","Vos parents et éventuels frères et sœurs")] <- "Autres"
enq.final$D6_re2[as.character(enq.final$D6_re) == "Vous et votre conjoint(e) (sans enfant)"] <- "Couples sans enfants"
summary(enq.final$D6_re2)
table(enq.final$D6_re2)
# Revenu tranche aggrégées (5 niveaux):
table(enq.final$D12_re)
enq.final$D12_re2 <- as.character(enq.final$D12_re)
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 0 à 1 100€ /mois  (soit 0 à 14 000 € par an)", "De 1 100 à 1 400€ /mois  (soit 14 000 à 17 000 € par an)")] <- "moins de 1400"
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 1 400 à 1 700€ /mois  (soit 17 000 à 21 000 € par an)", "De 1 700 à 2 000€ /mois  (soit 21 000 à 25 000 € par an)")] <- "1400-2000"
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 2 000 à 2 500€ /mois  (soit 25 000 à 30 000 € par an)", "De 2 500 à 2 900€ /mois  (soit 30 000 à 35 000 € par an)")] <- "2000-2900"
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 2 900 à 3 400€ /mois  (soit 35 000 à 41 000 € par an)", "De 3 400 à 4 100€ /mois  (soit 41 000 à 50 000 € par an)")] <- "2900-4100"
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 4 100 à 5 300€ /mois  (soit 50 000 à 63 000 € par an)", "5 300€ et plus /mois  (soit 63 000 € et plus par an)")] <- "plus de 4100"
summary(enq.final$D12_re2)
table(enq.final$D12_re2)
# Unité urbaine: <- Que faire des 0?
table(enq.final$UU_re)
enq.final$UU_re_2 <- enq.final$UU_re
enq.final$UU_re_2[enq.final$UU_re %in% c(1,2)] <- "moins de 10 000 hab"
enq.final$UU_re_2[enq.final$UU_re %in% c(3,4,5)] <- "10 000 - 100 000 hab"
enq.final$UU_re_2[enq.final$UU_re %in% c(6,7,8)] <- "plus de 100 000 hab et Paris"
enq.final$UU_re_2[enq.final$UU_re == 0] <- NA
summary(enq.final$UU_re_2)
table(enq.final$UU_re_2)
# CSP <- 431 NA?
table(enq.final$D8_re)
summary(enq.final$D8_re)
## ACM
library(FactoMineR)
# Substet (sans E6: pas assez d'individus en utilisateurs réguliers, pas fondamental de toutes manières)
acm <- subset(enq.final, select=c(E2_Typologie_utilisateurs, E3_Typologie_utilisateurs, E4_Typologie_utilisateurs, E5_Typologie_utilisateurs,
E7_Typologie_utilisateurs, E8_Typologie_utilisateurs, D1_tr, D3_re2, D4_re2, D6_re2, D12_re2, UU_re_2, D13_re))
acm <- as.data.frame(lapply(acm, factor))
res.acm <- MCA(acm, quali.sup=c(7:13), ncp=3, graph=T)
# Axes à conserver:
valprop.acm <- res.acm$eig[1:10,]
barplot(res.acm$eig[1:10,2], main="Histogramme des valeurs propres", names.arg=1:10,
xlab="Axes", ylab="Pourcentage d'inertie", cex.axis=0.8, font.lab=3, ylim=c(0, 50),
col="orange")
res.acm$var$contrib
res.acm$var$coord
res.acm$var$cos2
# Contribution moyenne
seuil <- 100/nrow(res.acm$var$contrib)
modatot <- which(res.acm$var$contrib[, 1]>seuil
| res.acm$var$contrib[, 2]>seuil
| res.acm$var$contrib[, 3]>seuil)
modatot
moda12 <- which(res.acm$var$contrib[, 1]>seuil
| res.acm$var$contrib[, 2]>seuil)
moda12
moda23 <- which(res.acm$var$contrib[, 2]>seuil
| res.acm$var$contrib[, 3]>seuil)
moda23
# Mise en forme et export des res.acm
dim1 <- cbind(res.acm$var$contrib[,1], res.acm$var$coord[,1], res.acm$var$cos2[,1])
colnames(dim1) <- c("dim1_contrib","dim1_coord","dim1_cos2")
dim1
dim2 <- cbind(res.acm$var$contrib[,2], res.acm$var$coord[,2], res.acm$var$cos2[,2])
colnames(dim2) <- c("dim2_contrib","dim2_coord","dim2_cos2")
dim2
dim3 <- cbind(res.acm$var$contrib[,3], res.acm$var$coord[,3], res.acm$var$cos2[,3])
colnames(dim3) <- c("dim3_contrib","dim3_coord","dim3_cos2")
dim3
varact <- round(cbind(dim1, dim2, dim3),3)
varact # res.acm pour toutes les modalites actives
varact[modatot,] # res.acm pour les modalites contributives: indexe varact en fonction de modadot (ligne).
## Graphiques: axe 1-2: cadre vide
plot(res.acm$var$coord[modatot, 1:2]*1.2, type="n",
xlab=paste0("Axe 1 (", round(res.acm$eig[1,2], 1), "%)"),
ylab=paste0("Axe 2 (", round(res.acm$eig[2,2], 1), "%)"),
main="Premier plan factoriel",
cex.main=1, cex.axis=0.8, cex.lab=0.7, font.lab=3,
asp=1)
abline(h=0, v=0, col="grey", lty=3, lwd=1)
# Points et etiquettes
points(res.acm$var$coord[modatot, 1:2],
col="black",
pch=c(15, 15, 16, 16, 17, 18, 5, 5, 6, 6))
etiquettes <- rownames(res.acm$var$coord)
print(etiquettes)
etiquettes2 <- c("Smartphone: Non ou peu", "Smartphone: régulier", "Mobile: Non ou peu", "Mobile: régulier",
"Tablettes: régulier", "Télé: Non ou peu", "Ordi portable: Non ou peu", "Ordi portable: régulier",
"Ordi fixe: Non ou peu", "Ordi fixe: régulier")
col <- c(1,2,1,2,2,1,1,2,1,2)
# Projection etiquettes
text(res.acm$var$coord[modatot,1:2], labels=etiquettes2,
col=col, cex=1, pos=c(1, 1, 1, 1, 1, 1, 1, 2, 1, 1))
# Variables supplementaires
print(res.acm$quali.sup$coord[, 1:2])
modasup=c("25-45 ans", "46-65 ans", "<25 ans", ">65 ans", "Bac", "<bac", ">bac",
"activite_foyer", "activite_emploi", "activite_etudiant", "activite_recherche_emploi","activite_retraite",
"menage_autre","menage_couples_sans_enfants","menage_parent(s)_enfants","menage_seul","1400-2000€","2000-2900€",
"2900-4100€","<1400€",">1400€","10 000- 100 000 hab","<10 000 hab",">100 000 hab","Femme","Homme")
text(res.acm$quali.sup$coord[c(1:5,7:9,11:24,26:28,30:31), 1:2]*1.2,
labels=modasup,
cex=0.8, col="blue", font=2)
# Mieux axe 2-3: cadre vide
plot(res.acm$var$coord[modatot, 2:3]*1.2, type="n",
xlab=paste0("Axe 2 (", round(res.acm$eig[2,2], 1), "%)"),
ylab=paste0("Axe 3 (", round(res.acm$eig[3,2], 1), "%)"),
main="Second plan factoriel",
cex.main=1, cex.axis=0.8, cex.lab=0.7, font.lab=3,
asp=1)
abline(h=0, v=0, col="grey", lty=3, lwd=1)
# Points
points(res.acm$var$coord[modatot, 2:3],
col="black",
pch=c(15, 15, 16, 16, 17, 18, 5, 5, 6, 6))
text(res.acm$var$coord[modatot,2:3], labels=etiquettes2,
col=col, cex=1, pos=c(4,1,1,3,1,2,4,3,1,4))
## Classification ascendante hiérarchique
acm2 <- subset(enq.final, select=c(id_r, E2_Typologie_utilisateurs, E3_Typologie_utilisateurs, E4_Typologie_utilisateurs, E5_Typologie_utilisateurs,
E7_Typologie_utilisateurs, E8_Typologie_utilisateurs))
acm2 <- as.data.frame(lapply(acm2, factor))
res.acm2 <- MCA(acm2, quali.sup=1, ncp=3, graph=T)
classif_equippements <- HCPC(res.acm2, nb.clust =4)
summary(classif_equippements)
cluster <- subset(classif_equippements$data.clust, select=c(id_r,clust))
colnames(cluster) <- c('id_r','cluster_equippement')
enq.final <- merge(enq.final, cluster, by="id_r")
table(enq.final$cluster_equippement)
## Caractérisations des clusters:
# ACM avec projection des clusters
acm3 <- subset(enq.final, select=c(E2_Typologie_utilisateurs, E3_Typologie_utilisateurs, E4_Typologie_utilisateurs, E5_Typologie_utilisateurs,
E7_Typologie_utilisateurs, E8_Typologie_utilisateurs, cluster_equippement))
acm3 <- as.data.frame(lapply(acm3, factor))
res.acm3 <- MCA(acm3, quali.sup=c(7), ncp=3, graph=T)
# Contribution moyenne
seuil <- 100/nrow(res.acm3$var$contrib)
modatot <- which(res.acm3$var$contrib[, 1]>seuil
| res.acm3$var$contrib[, 2]>seuil
| res.acm3$var$contrib[, 3]>seuil)
modatot
moda12 <- which(res.acm3$var$contrib[, 1]>seuil
| res.acm3$var$contrib[, 2]>seuil)
# axe 1-2: cadre vide
plot(res.acm3$var$coord[modatot, 1:2]*1.2, type="n",
xlab=paste0("Axe 1 (", round(res.acm$eig[1,2], 1), "%)"),
ylab=paste0("Axe 2 (", round(res.acm$eig[2,2], 1), "%)"),
main="Premier plan factoriel",
cex.main=1, cex.axis=0.8, cex.lab=0.7, font.lab=3,
asp=1)
abline(h=0, v=0, col="grey", lty=3, lwd=1)
# Points et etiquettes
points(res.acm3$var$coord[modatot, 1:2],
col="black",
pch=c(15, 15, 16, 16, 17, 18, 5, 5, 6, 6))
etiquettes2 <- c("Smartphone: Non ou peu", "Smartphone: régulier", "Mobile: Non ou peu", "Mobile: régulier",
"Tablettes: régulier", "Télé: Non ou peu", "Ordi portable: Non ou peu", "Ordi portable: régulier",
"Ordi fixe: Non ou peu", "Ordi fixe: régulier")
col <- c(1,2,1,2,2,1,1,2,1,2)
# Projection etiquettes
text(res.acm3$var$coord[modatot,1:2], labels=etiquettes2,
col=col, cex=1, pos=c(1, 1, 1, 1, 1, 1, 1, 2, 1, 1))
# Variables supplementaires
print(res.acm3$quali.sup$coord[, 1:2])
modasup=c("cluster_1","cluster_2","cluster_3","cluster_4")
text(res.acm$quali.sup$coord[c(1:4), 1:2]*1.2,
labels=modasup,
cex=0.8, col="blue", font=2)
## cluster_equippement / sexe
table (enq.final$cluster_equippement, enq.final$D13_re)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D13_re), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D13_re), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$D13_re)) # Non significatif
# cluster_equippement / age en tranches
table (enq.final$cluster_equippement, enq.final$D1_tr)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D1_tr), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D1_tr), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$D1_tr)) # Significati à 1%
#### Code Paulus
# cluster_equippement / CSP
table (enq.final$cluster_equippement, enq.final$D5_re)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D5_re), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D5_re), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$D5_re)) # Trop de catégories
# cluster_equippement / aire urbaine recodée
table (enq.final$cluster_equippement, enq.final$UU_re_2)
round(prop.table(table(enq.final$cluster_equippement, enq.final$UU_re_2), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$UU_re_2), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$UU_re_2)) # Non significatif
# cluster_equippement / revenu en tranches
table (enq.final$cluster_equippement, enq.final$D12_re2)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D12_re2), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D12_re2), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$D12_re2)) # Trop de catégories mais semble significatif
# cluster_equippement / composition du ménage
table (enq.final$cluster_equippement, enq.final$D6_re2)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D6_re2), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D6_re2), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$D6_re2)) # Significatif à 1%
# cluster_equippement / Activité du conjoin
table (enq.final$cluster_equippement, enq.final$D7_re2)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D7_re2), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D7_re2), margin = 2)*100, 3)
# cluster_equippement / activité
table (enq.final$cluster_equippement, enq.final$D4_re2)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D4_re2), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D4_re2), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$D4_re2)) # Trop de catégories mais semble significatif
# cluster_equippement / niveau d'études
table (enq.final$cluster_equippement, enq.final$D3_re2)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D3_re2), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$D3_re2), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$D3_re2)) # Significatif à 5%
## cluster_equippement / equippement:
# cluster_equippement / smartphones
table (enq.final$cluster_equippement, enq.final$E2_Typologie_utilisateurs)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E2_Typologie_utilisateurs), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E2_Typologie_utilisateurs), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$E2_Typologie_utilisateurs)) # Significatif à 1%
# cluster_equippement / mobiles
table (enq.final$cluster_equippement, enq.final$E3_Typologie_utilisateurs)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E3_Typologie_utilisateurs), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E3_Typologie_utilisateurs), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$E3_Typologie_utilisateurs)) # Significatif à 1%
# cluster_equippement /tablettes
table (enq.final$cluster_equippement, enq.final$E4_Typologie_utilisateurs)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E4_Typologie_utilisateurs), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E4_Typologie_utilisateurs), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$E4_Typologie_utilisateurs)) # Significatif à 1%
# cluster_equippement / télévisions
table (enq.final$cluster_equippement, enq.final$E5_Typologie_utilisateurs)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E5_Typologie_utilisateurs), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E5_Typologie_utilisateurs), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$E5_Typologie_utilisateurs)) # significatif à 1%
# cluster_equippement / consoles
table (enq.final$cluster_equippement, enq.final$E6_Typologie_utilisateurs)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E6_Typologie_utilisateurs), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E6_Typologie_utilisateurs), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$E6_Typologie_utilisateurs)) # Pas assez d'effectifs
# cluster_equippement / Ordinateurs portables
table (enq.final$cluster_equippement, enq.final$E7_Typologie_utilisateurs)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E7_Typologie_utilisateurs), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E7_Typologie_utilisateurs), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$E7_Typologie_utilisateurs)) # significatif à 1%
# cluster_equippement /ordinateurs fixes
table (enq.final$cluster_equippement, enq.final$E8_Typologie_utilisateurs)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E8_Typologie_utilisateurs), margin = 1)*100, 3)
round(prop.table(table(enq.final$cluster_equippement, enq.final$E8_Typologie_utilisateurs), margin = 2)*100, 3)
a <- chisq.test(table (enq.final$cluster_equippement, enq.final$E8_Typologie_utilisateurs)) # Significatif à 1%
# -> Partie 4:
#  Usage des écrans au quotidien et pendant les repas.
#  regression logit: Y(écran pendant repas)= X(Indicateurs equippement + sexe + age + diplome + mange seul+ éventuellement à préparé)
#  + Régréssion Y = attention portée à l'écran (sur sous population qui possède un écran) = X (same)
#               Y (télé pendant repas) = same
library(lmtest)
library(ggplot2)
# Premier modèle (Y = ecran pendant repas (oui/non), X= socio-demo + mange seul + indicateurs d'equippement)
## Variables:
# Ecrans pendant repas (oui/non selectionne)
table(enq.final$A11_3_re)
round(prop.table(table(enq.final$A11_3_re))*100,1)
table(enq.final$A21_3_re)
round(prop.table(table(enq.final$A21_3_re[enq.final$A1 != "1 fois"]))*100,1)
table(enq.final$A26_3_re)
round(prop.table(table(enq.final$A26_3_re[enq.final$A1 == "3 fois ou plus"]))*100,1)
# Indicateurs d'equippement
table(enq.final$E2_Typologie_utilisateurs)
table(enq.final$E3_Typologie_utilisateurs)
table(enq.final$E4_Typologie_utilisateurs)
table(enq.final$E5_Typologie_utilisateurs)
table(enq.final$E7_Typologie_utilisateurs)
table(enq.final$E8_Typologie_utilisateurs)
# Clusters equippement
table(enq.final$cluster_equippement)
# Sexe
table(enq.final$D13_re)
# Age en tranche
table(enq.final$D1_tr)
# Dipome (simplifié)
table(enq.final$D3_re2)
# Mange seul: premiere prise
table(enq.final$A12_re)
round(prop.table(table(enq.final$A12_re))*100,1)
# Mange seul / regarde la tele (premiere prise)
round(prop.table(table(enq.final$A12_re, enq.final$r3_1_re), margin = 1)*100,1)
# Attention portée a l'ecran:
table(enq.final$r2_1_re)
table(enq.final$r2_2_re) # ! effectifs faibles (attention a l'interpretation)
table(enq.final$r2_3_re) # effectifs pas assez importants
# Regarder la tele en mangeant (oui/non)
table(enq.final$r3_1_re)
round(prop.table(table(enq.final$r3_1_re))*100,1)
# Ecran pendant repas oui/non (sous population)
# seconde prise:
table(enq.final$A21_3_re[enq.final$A1_re %in% c("2 fois", "3 fois ou plus")])
# troisieme prise:
table(enq.final$A26_3_re[enq.final$A1_re == "3 fois ou plus"]) # Effectifs insuffisants
# Creation d'une variable qui rassemble tous les invidus ayant déclaré avoir regardé un écran quelque soit le repas
enq.final$repas_ecran_meta <- ifelse(enq.final$A11_3_re == "Oui" | enq.final$A21_3_re == "Oui" | enq.final$A26_3_re == "Oui",
"Ecran", "Pas d'ecran")
table(enq.final$repas_ecran_meta)
enq.final$repas_ecran_meta <- as.factor(enq.final$repas_ecran_meta)
## Regression première prise
reg_repecran_1 <- glm(A11_3_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr + D3_re2 + A12_re, family=binomial(link = "logit"), data = enq.final)
summary(reg_repecran_1)
# Regression seconde prise
reg_repecran_2 <- glm(A21_3_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr + D3_re2 , family=binomial(link = "logit"), data = enq.final)
summary(reg_repecran_2)
# Toutes prises
reg_repecran_all <- glm(repas_ecran_meta ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr + D3_re2 , family=binomial(link = "logit"), data = enq.final)
summary(reg_repecran_all)
## Regression attention: 1ere prise
reg_attecran_1 <- glm(r2_1_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr + D3_re2 + A12_re, family=binomial(link = "logit"), data = enq.final,
subset= enq.final$id_r[enq.final$A11_3_re == "Oui"])
summary(reg_attecran_1)
# seconde prise:
reg_attecran_2 <- glm(r2_2_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr + D3_re2 + A12_re, family=binomial(link = "logit"), data = enq.final,
subset= enq.final$id_r[enq.final$A21_3_re == "Oui"])
summary(reg_attecran_2)
## Regression Télé pendant repas / pas télé
reg_telerepas <- glm(r3_1_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr + D3_re2 + A12_re, family=binomial(link = "logit"), data = enq.final)
summary(reg_telerepas)
# Meme chose mais en faisant varier les modalites de reference
# Age en tranche
table(enq.final$D1_tr)
enq.final$D1_tr <- as.factor(enq.final$D1_tr)
enq.final$D1_tr_2 <- relevel(enq.final$D1_tr, ref="46-65 ans")
enq.final$D1_tr_3 <- relevel(enq.final$D1_tr, ref="plus de 65 ans")
# Dipome (simplifié)
table(enq.final$D3_re2)
enq.final$D3_re2 <- as.factor(enq.final$D3_re2)
enq.final$D3_re2_2 <- relevel(enq.final$D3_re2, ref="Inférieur au bac")
enq.final$D3_re2_3 <- relevel(enq.final$D3_re2, ref="Supérieur au bac")
## Regression première prise
reg_repecran_1 <- glm(A11_3_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr_2 + D3_re2_2 + A12_re, family=binomial(link = "logit"), data = enq.final)
summary(reg_repecran_1)
reg_repecran_1 <- glm(A11_3_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr_3 + D3_re2_3 + A12_re, family=binomial(link = "logit"), data = enq.final)
summary(reg_repecran_1)
# Regression seconde prise
reg_repecran_2 <- glm(A21_3_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr_2 + D3_re2_2 , family=binomial(link = "logit"), data = enq.final)
summary(reg_repecran_2)
reg_repecran_2 <- glm(A21_3_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr_3 + D3_re2_3 , family=binomial(link = "logit"), data = enq.final)
summary(reg_repecran_2)
# Toutes prises
reg_repecran_all <- glm(repas_ecran_meta ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr_2 + D3_re2_2 , family=binomial(link = "logit"), data = enq.final)
summary(reg_repecran_all)
reg_repecran_all <- glm(repas_ecran_meta ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr_3 + D3_re2_3 , family=binomial(link = "logit"), data = enq.final)
summary(reg_repecran_all)
## Regression attention: 1ere prise
reg_attecran_1 <- glm(r2_1_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr_2 + D3_re2_2 + A12_re, family=binomial(link = "logit"), data = enq.final,
subset= enq.final$id_r[enq.final$A11_3_re == "Oui"])
summary(reg_attecran_1)
reg_attecran_1 <- glm(r2_1_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr_3 + D3_re2_3 + A12_re, family=binomial(link = "logit"), data = enq.final,
subset= enq.final$id_r[enq.final$A11_3_re == "Oui"])
summary(reg_attecran_1)
## Regression Télé pendant repas / pas télé
reg_telerepas <- glm(r3_1_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr_2 + D3_re2_2 + A12_re, family=binomial(link = "logit"), data = enq.final)
summary(reg_telerepas)
reg_telerepas <- glm(r3_1_re ~  E2_Typologie_utilisateurs + E3_Typologie_utilisateurs +
E4_Typologie_utilisateurs + E5_Typologie_utilisateurs + E7_Typologie_utilisateurs +
E8_Typologie_utilisateurs + D13_re + D1_tr_3 + D3_re2_3 + A12_re, family=binomial(link = "logit"), data = enq.final)
summary(reg_telerepas)
############################
# Graphique: Pourcentage de gens qui regardent différents écrans.
# (quels écrans pendant les repas: intro de la fiche de synthèse)
graphe_usage_repas <- c(length(which(enq.final$r3_1_re == "Oui")), length(which(enq.final$r3_2_re == "Oui")),
length(which(enq.final$r3_3_re == "Oui")), length(which(enq.final$r3_4_re == "Oui")),
length(which(enq.final$r3_5_re == "Oui")), length(which(is.na(enq.final$R3_other) != T)))
colors <- rainbow(length(graphe_usage_repas), s = 0.5, v=1)
pie(round(prop.table(graphe_usage_repas)*100,1), main = "Quels écrans pendant le repas?",
labels = c("Télévision", "Téléphone/Smartphone", "Tablette", "Ordinateur", "Console", "Autre"), col = colors)
barplot(round(prop.table(graphe_usage_repas)*100,1), main = "Quels écrans pendant le repas?", col = colors,
legend.text = c("Télévision", "Téléphone/Smartphone", "Tablette", "Ordinateur", "Console", "Autre"))
pie(round(prop.table(graphe_usage_repas)*100,1), main = "Quels écrans pendant le repas?",
labels = c("Télévision", "Téléphone/Smartphone", "Tablette", "Ordinateur", "Console", "Autre"), col = colors)
barplot(round(prop.table(graphe_usage_repas)*100,1), main = "Quels écrans pendant le repas?", col = colors,
legend.text = c("Télévision", "Téléphone/Smartphone", "Tablette", "Ordinateur", "Console", "Autre"))
>>>>>>> Stashed changes
