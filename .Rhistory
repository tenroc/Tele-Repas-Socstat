<<<<<<< HEAD
install.packages("R2HTML")
install.packages(c("foreign", "questionr", "stats", "FactoMineR", "lmtest", "TraMineR", "tm", "wordcloud", "topicmodels"))
install.packages(c("foreign", "questionr", "stats", "FactoMineR",
install.packages("foreign")
install.packages("lmtest")
install.packages("lmtest")
install.packages("FactoMineR")
install.packages("foreign")
install.packages("questionr")
install.packages("Stat2Data")
install.packages("TraMineR")
install.packages("tm")
install.packages("wordcloud")
install.packages("topicmodels")
install.packages("C:/Users/sarah/Desktop/RStudio/www/rstudio/0CF412EBF10953804E78A5A8006EBE50.cache.css", repos = NULL)
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpGiHR4y/downloaded_packages/car_2.1-0.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpGiHR4y/downloaded_packages/classInt_0.1-23.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpGiHR4y/downloaded_packages/digest_0.6.8.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpGiHR4y/downloaded_packages/e1071_1.6-7.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpGiHR4y/downloaded_packages/ellipse_0.3-8.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpGiHR4y/downloaded_packages/Stat2Data_1.6.zip", repos = NULL, type = "win.binary")
## Introduction au logiciel R -- ENS -- Master SocStat / Master PDI -- 2015
## SÃ©ance 1 : Prise en main du logiciel
## R est d'abord une grosse calculatrice
1 + 3
450 / 78
exp(-2)
## Introduction au logiciel R -- ENS -- Master SocStat / Master PDI -- 2015
## SÃ©ance 1 : Prise en main du logiciel
## R est d'abord une grosse calculatrice
1 + 3
450 / 78
exp(-2)
## Introduction au logiciel R -- ENS -- Master SocStat / Master PDI -- 2015
## SÃ©ance 1 : Prise en main du logiciel
## R est d'abord une grosse calculatrice
1 + 3
450 / 78
exp(-2)
## Un langage orientÃ© objet
x <- -8
y <- 9
x+8
truc <- x+y
truc
## Syntaxe des noms d'objets
# Ãviter les caractÃ¨res accentuÃ©s
# R est sensible a la casse : x et X sont deux objets diffÃ©rents
# Ãviter les noms tels que c, q, t, F, T, max, min, qui sont des noms de fonctions
# Les espaces sont interdits : utiliser . ou _ (privilÃ©gier _)
## Vecteurs
## CrÃ©er un vecteur
# operateur c (pour combine ou concatenate) : combiner des valeurs
# operateur rep (pour replicate)
# operateur seq (pour sequence) : crÃ©er des sÃ©ries Ã©quidistantes de nombres.
## Vecteurs numÃ©riques
tailles <- c(167, 192, 173, 174, 172, 167, 171,
185, 163, 170)
tailles
suite <- c(1:10)
suite
## Vecteurs numÃ©riques - opÃ©rations
tailles+10
tailles2
tailles/10
tailles^2
## OpÃ©rations sur plusieurs vecteurs
poids <- c(86, 74, 83, 50, 78, 66, 66, 51, 50, 55)
tailles.m <- tailles/100
imc <- poids/(tailles.m^2)
imc
imc>25
## CrÃ©er une suite de nombre -- seq()
suite <- seq(1,10) # Ã©quivalent Ã  c(1:10)
suite
suite2 <- seq(0,30,3)
suite2
## CrÃ©er une suite de nombre -- rep()
toto <- c(7,9,13)
# on rÃ©pÃ¨te toto 3 fois
rep(toto, 3)
# on rÃ©pÃ¨te le premier terme une fois,
# et le second deux fois...
rep(toto, 1:3)
## Vecteur alphanumÃ©rique (character)
dipl <- c("BEP", "CAP", "Bac", "Licence", "CAP",
"Bac", "Master")
dipl
## OpÃ©ration sur plusieurs vecteurs alphanumÃ©riques
sexe <- rep(c("H","F"), c(4,3))
table(dipl, sexe)
## Afficher un texte
cat("C'est quoi R ?")
cat("C'est quoi \"R\" ?")
cat("C'est quoi \"R\" ? Un truc de geek !")
cat("C'est quoi \"R\" ? \n Un truc de geek !")
## Vecteurs logiques
# T=TRUE et F=FALSE
logic <- c(T,T,F,T)
logic
# PrÃ©fÃ©rer TRUE ou FALSE en toutes lettres, qui sont plus explicites.
## Matrice
# PremiÃ¨re maniÃ¨re de crÃ©er une matrice : on crÃ©e
# un vecteur et on lui dÃ©finit deux dimensions
x <- 1:12
x
dim(x) <- c(3,4)
x
# DeuxiÃ¨me maniÃ¨re : la fonction matrix
y <- matrix(1:12, nrow=3)
y
y <- matrix(1:12, nrow=3, byrow=T)
y
# On peut transformer cette matrice...
colnames(x) <- LETTERS[1:4]
# donne des noms aux colonnes
rownames(x) <- paste("Indiv", 1:3, sep="")
# donne des noms aux lignes
x
t(x) # transposition
# TroisiÃ¨me maniÃ¨re : coller des lignes ou des colonnes
cbind(A=1:4, B=5:8, C=9:12)
rbind(A=1:4, B=5:8, C=9:12)
tailles <- c(167, 192, 173, 174, 172, 167, 171, 185,
163, 170)
poids <- c(86, 74, 83, 50, 78, 66, 66, 51, 50, 55)
x <- cbind(tailles, poids)
x
## Listes
maliste <- list(mensuration1=tailles,
mensuration2=poids)
maliste
maliste$mensuration1
maliste$mensuration2
## Data frames
ident <- paste("ID", 1:10, sep="")
data1 <- data.frame(tailles, poids, ident)
str(data1)
View(data1)
#Â Autre possibilitÃ© en donnant un nom diffÃ©rent aux colonnes
data2 <- data.frame(X=tailles, Y=poids, Z=ident)
# On peut aussi renommer aprÃ¨s coup
data3 <- data.frame(tailles, poids, ident)
names(data3) <- c("X", "Y", "Z")
str(data3)
## Indexation
# Une seule dimension
tailles
tailles[1]
tailles[c(1,3,10)]
# Deux dimensions
data1
data1[1,]
data1[1,1]
data1[1,2]
data1[,2]
data1[,3]
## Fonctions
help ("mean")
menage <- matrix (nrow = 4, ncol=4)
View(menage)
colnames(menage)<- ("" "Conjoint""nbPersonnes")
help(colnames)
colnames(menage)<- menage("","Chef","Conjoint","NbPersonnes")
View(menage)
colnames(menage)<- menage("","Chef","Conjoint","NbPersonnes")
x<- 5
x <- -8
rownames(menage)<- paste("menage_",1:4,"")
colnames(menage)<- ("Chef", "Conjoint", "NbPers")
colnames(menage)<- names("Chef", "Conjoint", "NbPers")
colnames(menage)<-colnames("Chef", "Conjoint", "NbPers")
Chef <- c(1200, 1180, 1750, 2100)
Conjoint <- c(1450, 1850, 1690, 0)
NbPersonnes <-c(4,2,3,2)
menage <- cbind(Chef,Conjoint,NbPersonnes)
colnames(menage)<-("Chef" "Conjoint" "NbPers")
colnames(menage)<-("Chef")
colnames(menage)<-("Chef""Conjoint""NbPersonnes")
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete)
menage <- matrix (nrow = 4, ncol=6)
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete)
menage <- matrix (nrow = 4, ncol=6)
rownames(menage)<- paste("menage_",1:4,"")
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete)
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
Chef <- c(1200, 1180, 1750, 2100)
Conjoint <- c(1450, 1850, 1690, 0)
NbPersonnes <-c(4,2,3,2)
menage <- cbind(Chef,Conjoint,NbPersonnes)
RevenuParTete <- (Conjoint +Chef)/NbPersonnes
menage <- cbind(Chef,Conjoint,NbPersonnes,RevenuParTete)
rownames(menage)<- paste("menage_",1:4,"")
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
?max
menage<-rbind (RevenuMax)
RevenuMax <- max(Chef)
menage<-rbind (RevenuMax)
menage<-bind (RevenuMax)
Chef <- c(1200, 1180, 1750, 2100)
Conjoint <- c(1450, 1850, 1690, 0)
NbPersonnes <-c(4,2,3,2)
RevenuParTete <- (Conjoint +Chef)/NbPersonnes
RevenuMax <- max(Chef)
menage <- cbind(Chef,Conjoint,NbPersonnes,RevenuParTete)
?radd
?add
?insert
View(menage)
drop(menage)
View(menage)
delete(menage)
delete.response(menage)
menage <- data.frame(Chef,Conjoint,NbPersonnes,RevenuParTete)
View(menage)
menage<-rbind(RevenuMax)
menage <- data.frame(Chef,Conjoint,NbPersonnes,RevenuParTete)
RevenuMin <- min(Chef)
<- max(Chef)
RevenuMax
RevenuMin
rownames(menage)<- paste("menage_",1:4,"")
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
deuxlignes<-data.frame(matrix(1,2,5))
names(deuxlignes)<-names(iris)
deuxlignes
reslign<-rbind(deuxlignes,iris)
head(reslign)
View(reslign)
View(reslign)
View(deuxlignes)
ConjointGagnePlus <- c(Conjoint>Chef)
ConjointGagnePlus
menage2<-rbind(menage,ConjointGagnePlus)
View(menage2)
menage2<-cbind(menage,ConjointGagnePlus)
menage<-cbind(menage,ConjointGagnePlus)
Chef2 <- c(NA, 1180, 1750, 2100)
Conjoint2 <- c(1450, NA, 1690, NA)
NbPersonnes2 <-c(4,2,3,2)
RevenuParTete2 <- (Conjoint2 +Chef2)/NbPersonnes2
RevenuParTete2 <- (Conjoint2 +Chef2)/NbPersonnes2
RevenuMax2 <- max(Chef2)
RevenuMin2 <- min(Chef2)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
View(menage2)
RevenuParTete2 <- sum(Conjoint2,Chef2,na.rm =TRUE)/NbPersonnes2
RevenuParTete2 <- sum(Conjoint2,Chef2,na.rm =TRUE)/NbPersonnes2
RevenuMax2 <- max(Chef2,na.rm=TRUE)
RevenuMin2 <- min(Chef2,na.rm=TRUE)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage<-cbind(menage2,ConjointGagnePlus2)
menage<-cbind(menage2,ConjointGagnePlus2,na.rm=TRUE)
menage<-cbind(menage2,ConjointGagnePlus2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
menage<-cbind(menage2,ConjointGagnePlus2)
View(menage2)
menage2<-cbind(menage2,ConjointGagnePlus2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage2<-cbind(menage2,ConjointGagnePlus2)
Chef <- c(1200, 1180, 1750, 2100)
Conjoint <- c(1450, 1850, 1690, 0)
NbPersonnes <-c(4,2,3,2)
RevenuParTete <- (Conjoint +Chef)/NbPersonnes
RevenuMax <- max(Chef)
RevenuMin <- min(Chef)
menage <- data.frame(Chef,Conjoint,NbPersonnes,RevenuParTete)
ConjointGagnePlus <- c(Conjoint>Chef)
menage<-cbind(menage,ConjointGagnePlus)
rownames(menage)<- paste("menage_",1:4,"")
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
Chef2 <- c(NA, 1180, 1750, 2100)
Conjoint2 <- c(1450, NA, 1690, NA)
NbPersonnes2 <-c(4,2,3,2)
RevenuParTete2 <- sum(Conjoint2,Chef2,na.rm =TRUE)/NbPersonnes2
RevenuMax2 <- max(Chef2,na.rm=TRUE)
RevenuMin2 <- min(Chef2,na.rm=TRUE)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage2<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
ConjointGagnePlus2 <- c(lenght(Conjoint2>Chef2,na.rm=TRUE))
ConjointGagnePlus2 <- c((Conjoint2>Chef2,na.rm=TRUE))
na.rm=TRUE
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage2<-cbind(menage2,ConjointGagnePlus2)
na.rm=TRUE
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage2<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2,na.rm=TRUE)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage2<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
install.packages("GDAtools")
library(GDATools)
library(GDATools)
library(GDATools)
library("GDAtools", lib.loc="~/R/win-library/3.2")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library("GDAtools", lib.loc="~/R/win-library/3.2")
install.packages("GDAtools")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library(GDATools)
library(GDAtools)
library("GDAtools", lib.loc="~/R/win-library/3.2")
install.packages("GDAtools")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library(GDAtools)
install.packages("flashClust")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/flashClust_1.01-2.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library(flashClust)
library(stats)
library(flashClust)
library(GDAtools)
install.packages("tm")
install.packages("topicmodels")
install.packages("wordcloud")
install.packages("tm")
install.packages("C:/Users/sarah/AppData/Local/Temp/Rtmp2ztZnI/downloaded_packages/tm_0.6-2.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/Rtmp2ztZnI/downloaded_packages/topicmodels_0.2-2.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/Rtmp2ztZnI/downloaded_packages/wordcloud_2.5.zip", repos = NULL, type = "win.binary")
lenght(1:70) "longueur de l'objet"
mean(1:70)
lenght(1:70) #longueur de l'objet
mean(1:70)
length(1:70) #longueur de l'objet
mean(1:70)
median(1:70)
seq(1,70, by=3, length =10)
seq(1,70,length =10)
length("bb",'cc,"dd')
length("bb","cc","dd")
length(c("bb","cc","dd"))
c("bb","cc","dd")=="Yvonne"
sexe <-c("H","F","F","H")
sexe.f <- factor(sexe)
sexe.f.b <- factor(c(2,1,1,2),labels=c("femme","homme"))
age <- c("34","43","56","45")
age <- as.numeric(age)
#associer un attribut
age
prenoms<-c("naouek","roger","monique", "redha")
names(age)<-prenoms
prenoms
age <- c("34","43","56","45")
age <- as.numeric(age)
age <- c("34","43","56","45")
age
prenoms<-c("naoufel","roger","monique", "redha")
names(age)<-prenoms
age
prenoms
age <- c("34","43","56","45")
age <- as.numeric(age)
#associer un attribut
age
prenoms<-c("naoufel","roger","monique", "redha")
names(age)<-prenoms
age
age["Naoufel"]
age["Naoufel"]
names(age)<-prenoms
age["Naoufel"]
age
age
prenoms<-c("naoufel","roger","monique", "redha")
names(age)<-prenoms
age["naoufel"]
mat.d[c(2,3),c(1,3)]
mat.a <- matrix(1:15,nrow=3)
mat.b <- matrix(1:15, nrow=3,ncol=4)
mat.c <-matrix(1:4,nrow=3,ncol=4)
mat.d <- matrix(1:4,nrow=3,ncol=4,byrow=T)
mat.d[c(2,3),c(1,3)]
library(foreign)
mydata = read.dta("http://dss.princeton.edu/training/Panel101.dta")
View(mydata)
View(mydata)
View(mydata)
mydata$time = ifelse(mydata$year >= 1994, 1, 0)
mydata$treated = ifelse(mydata$country == "E" |
mydata$country == "F" |
mydata$country == "G", 1, 0)
mydata$did = mydata$time * mydata$treated
didreg = lm(y ~ treated + time + did, data = mydata)
summary(didreg)
didreg1 = lm(y ~ treated*time, data = mydata)
summary(didreg1)
=======
install.packages(c("questionr", "foreign", "R2HTML"))
install.packages(c("FactoMineR", "TraMineR", "lmtest"))
install.packages(c("tm", "wordcloud", "topicmodels"))
>>>>>>> master
install.packages("igraph")
install.packages("sna")
install.packages("Matrix")
install.packages("systemfit")
install.packages("AER")
install.packages("plm")
install.packages("pglm")
install.packages("lfe")
<<<<<<< HEAD
n <- 100000
instr <-rnorm(n)
x<-4*instr+rnorm(n)
inobs <-rnorm(n)
y<- 4+x+7*inobs+rnorm(n)
summary(r1)
r1 <- lm(y~x+inobs)
summary(r1)
r2<-lm(y~x)
summary(r2)
n <- 100000
instr <-rnorm(n)
inobs <-rnorm(n)
x<-4*instr+5*inobs+rnorm(n)
y<- 4+x+7*inobs+rnorm(n)
#régresssion avec toute l'information
r1 <- lm(y~x+inobs)
summary(r1)
#régression sans toute l'information
r2<-lm(y~x)
summary(r2)
e1 <- lm(x~instr)
summary(e1)
e1 <- lm(x~instr)
summary(e1)
str(e1)
e2 <- lm(y~e1$fitted.values)
summary(e2)
library("foreign")
gm<- read.xport("C:/Users/sarah/Google Drive/Econométrie pour sociologues/L2_Variables_instrumentales/gm2.xpt")
str(gm)
gm2 <- gm[gm$DEMENAG==0,]
table(gm$NAI)
table(gm$NAIMN,gm$RET15)
prop.table(table(gm$NAIMN,gm$RET15))
prop.table(table(gm$NAIMN,gm$RET15),1)
naif<- lm(RET15~VRET15+S1,data=gm2)
naif
summary(naif)
e1<- lm(VRET15~VJANMAY+VJUNNOV+S1, data=gm2) #on remet toutes les variables explicatives
summary(e1)
e2 <- lm(gm2$RET15~e1$fitted.values+gm2$s1)
e2 <- lm(RET15~e1$fitted.values+s1, data=gm2[is.na(gm2$VRET15)==0,])
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2[is.na(gm2$VRET15)==0,])
gm2 <- gm[gm$DEMENAG==0 & gm$QUINZE==1 & is.na(gm$VJANMAY)==0,]
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2[is.na(gm2$VRET15)==0,])
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2,])
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2)
summary(e2)
library(AER)
summary(iv)
iv <- ivreg(RET15~VRET15+S1|VJANMAY+VJUNNOV+S1, data=gm2)
summary(iv)
summary(iv,diagnostics = T)
gm3 <- gm[gm$DEMENAG==0 & gm$QUINZEB==1 & is.na(gm$VJANMAY)==0,]
str(gm3)
s1 <- lm (VRET15~VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor())
s1 <- lm (VRET15~VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor(AN),data=gm3)
str(s1)
summary(s1)
naive<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1,data=gm3)
naive<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1,data=gm3)
summary(naive)
iv<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1 +VJANMAY+VJUNNOV+JANMAY+JUNNOV
,data=gm3)
summary(iv)
iv<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1|VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor(AN)
+S1+ETR1
,data=gm3)
iv<-ivreg (RET16~VRET15+RET15+factor(AN)+S1+ETR1|VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor(AN)
+S1+ETR1
,data=gm3)
summary(iv)
rm(list=ls())
setwd(chemin)
chemin <- "C:/Users/sarah/Desktop/Tele-Repas-Socstat"
setwd(chemin)
enq.final <- read.csv2("./DATA_BDD-RECONCILIE/enq final_04.csv", encoding="UTF-8")
t<-table(enq.final$A12_re,enq.final$A11_3_re)
t
t<-round(prop.table(t,1),2)*100
t
t<-table(enq.final$A12_re,enq.final$A11_3_re)
t
chisq.test(t)
t<-table(enq.final$A13_5_re,enq.final$A11_3_re)
t
chisq.test(t)
t<-round(prop.table(t,1),2)*100
t
t<-table(enq.final$A11_2_re,enq.final$A11_3_re)
t
chisq.test(t)
=======
install.packages("Factoshiny")
install.packages("Factoshiny")
install.packages("Factoshiny")
install.packages("Factoshiny")
setwd('/home/tenroc/Tele-Repas-Socstat')
enq.final <- read.csv("DATA_BDD-RECONCILIE/enq final_04.csv", fileEncoding = "UTF-8", sep=";")
for(i in 1:nrow(enq.final)){
if(enq.final$E2_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E2_a_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E2_b_re[i] %in% c('Souvent', 'Très souvent')){
enq.final$E2_Typologie_utilisateurs[i] <- 'Utilisateur régulier'
} else {
enq.final$E2_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E2_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E2_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
}
# Mobile
for(i in 1:nrow(enq.final)){
if(enq.final$E3_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E3_a_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E3_b_re[i] %in% c('Souvent', 'Très souvent')){
enq.final$E3_Typologie_utilisateurs[i] <- 'Utilisateur régulier'
} else {
enq.final$E3_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E3_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E3_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
}
# Tablette
for(i in 1:nrow(enq.final)){
if(enq.final$E4_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E4_a_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E4_b_re[i] %in% c('Souvent', 'Très souvent')){
enq.final$E4_Typologie_utilisateurs[i] <- 'Utilisateur régulier'
} else {
enq.final$E4_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E4_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E4_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
}
# Télé
for(i in 1:nrow(enq.final)){
if(enq.final$E5_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E5_a_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E5_b_re[i] %in% c('Souvent', 'Très souvent')){
enq.final$E5_Typologie_utilisateurs[i] <- 'Utilisateur régulier'
} else {
enq.final$E5_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E5_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E5_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
}
# Console
for(i in 1:nrow(enq.final)){
if(enq.final$E6_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E6_a_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E6_b_re[i] %in% c('Souvent', 'Très souvent')){
enq.final$E6_Typologie_utilisateurs[i] <- 'Utilisateur régulier'
} else {
enq.final$E6_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E6_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E6_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
}
# Ordinateur portable
for(i in 1:nrow(enq.final)){
if(enq.final$E7_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E7_a_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E7_b_re[i] %in% c('Souvent', 'Très souvent')){
enq.final$E7_Typologie_utilisateurs[i] <- 'Utilisateur régulier'
} else {
enq.final$E7_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E7_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E7_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
}
# Ordinateur fixe
for(i in 1:nrow(enq.final)){
if(enq.final$E8_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E8_a_re[i] %in% c('1','2','3 ou plus')){
if(enq.final$E8_b_re[i] %in% c('Souvent', 'Très souvent')){
enq.final$E8_Typologie_utilisateurs[i] <- 'Utilisateur régulier'
} else {
enq.final$E8_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E8_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
} else {
enq.final$E8_Typologie_utilisateurs[i] <- 'Non utilisateur ou utilisateur occasionel'
}
}
enq.final$D1_tr[enq.final$D1_re < 25] <- "moins de 25 ans"
enq.final$D1_tr[enq.final$D1_re %in% c(25:35)] <- "25-35 ans"
enq.final$D1_tr[enq.final$D1_re %in% c(36:45)] <- "36-45 ans"
enq.final$D1_tr[enq.final$D1_re %in% c(46:55)] <- "46-55 ans"
enq.final$D1_tr[enq.final$D1_re %in% c(56:65)] <- "56-65 ans"
enq.final$D1_tr[enq.final$D1_re > 65] <- "plus de 65 ans"
table(enq.final$D1_tr)
# Diplome simplifié
table(enq.final$D3_re)
enq.final$D3_re2[as.character(enq.final$D3_re) %in% c("Aucun diplôme", "BEPC, brevet", "CAP, BEP","Certificat d’études primaires")] <- "Inférieur au bac"
enq.final$D3_re2[as.character(enq.final$D3_re) == "Baccalauréat, BP"] <- "Bac"
enq.final$D3_re2[as.character(enq.final$D3_re) %in% c("Deug, DUT, BTS, diplômes des professions sociales ou de la santé","Licence, Bac+3","Bac+4 ou plus : Master, maîtrise, DEA, école d'ingénieur, doctorat etc.")] <- "Supérieur au bac"
enq.final$D3_re2[as.character(enq.final$D3_re) == "Refus"] <- NA
table(enq.final$D3_re2)
# Diplome du conjoin simplifié:
table(enq.final$D3_bis_re)
enq.final$D3_re2[as.character(enq.final$D3_bis_re) %in% c("Aucun diplôme", "BEPC, brevet", "CAP, BEP","Certificat d’études primaires")] <- "Inférieur au bac"
enq.final$D3_re2[as.character(enq.final$D3_bis_re) == "Baccalauréat, BP"] <- "Bac"
enq.final$D3_re2[as.character(enq.final$D3_bis_re) %in% c("Deug, DUT, BTS, diplômes des professions sociales ou de la santé","Licence, Bac+3","Bac+4 ou plus : Master, maîtrise, DEA, école d'ingénieur, doctorat etc.")] <- "Supérieur au bac"
enq.final$D3_re2[as.character(enq.final$D3_bis_re) == "Refus"] <- NA
table(enq.final$D3_re2)
# profession
table(enq.final$D4_re)
enq.final$D4_re2[as.character(enq.final$D4_re) %in% c("Etudiant avec emploi", "Etudiant sans emploi")] <- "Etudiant"
enq.final$D4_re2[as.character(enq.final$D4_re) %in% c("Emploi à plein temps", "Emploi à temps partiel")] <- "Emploi"
enq.final$D4_re2[as.character(enq.final$D4_re) == "A la retraite"] <- "retraite"
enq.final$D4_re2[as.character(enq.final$D4_re) == "En recherche d'emploi"] <- "recherche emploi"
enq.final$D4_re2[as.character(enq.final$D4_re) == "Au foyer"] <- "Au foyer"
enq.final$D4_re2[as.character(enq.final$D4_re) == "Autre (voir D4_other_re)"] <- NA
table(enq.final$D4_re2)
# activité du conjoint - utilité?
table(enq.final$D7_re)
enq.final$D7_re2[as.character(enq.final$D7_re) %in% c("Etudiant avec emploi", "Etudiant sans emploi")] <- "étudiants"
enq.final$D7_re2[as.character(enq.final$D7_re) %in% c("Emploi à plein temps", "Emploi à temps partiel")] <- "Emploi"
enq.final$D7_re2[as.character(enq.final$D7_re) == "A la retraite"] <- "retraite"
enq.final$D7_re2[as.character(enq.final$D7_re) == "En recherche d’emploi"] <- "recherche emploi"
enq.final$D7_re2[as.character(enq.final$D7_re) == "Au foyer"] <- "Au foyer"
enq.final$D7_re2[as.character(enq.final$D7_re) == "Autre (voir D4_other_re)"] <- NA
table(enq.final$D7_re2)
table(enq.final$D6_re)
table(enq.final$D6_re)
enq.final$D6_re2[as.character(enq.final$D6_re) == "Vous uniquement"] <- "Seul"
enq.final$D6_re2[as.character(enq.final$D6_re) %in% c("Vous et votre conjoint(e), avec un ou plusieurs enfant(s)", "Vous et un ou plusieurs enfant(s)")] <- "Parent(s) avec enfants"
enq.final$D6_re2[as.character(enq.final$D6_re) %in% c("Autre (voir D6_other_re)","Vos parents et éventuels frères et sœurs","Vous et votre conjoint(e) (sans enfant)")] <- "Autres"
summary(enq.final$D6_re2)
table(enq.final$D7_re2)
table(enq.final$D7_re)
summary(enq.final$D3_re2)
table(enq.final$D3_re2)
summary(enq.final$D1_tr)
table(enq.final$D1_tr)
summary(enq.final$D6_re2)
table(enq.final$D6_re2)
table(enq.final$D6_re)
enq.final$D6_re2[as.character(enq.final$D6_re) == "Vous uniquement"] <- "Seul"
enq.final$D6_re2[as.character(enq.final$D6_re) %in% c("Vous et votre conjoint(e), avec un ou plusieurs enfant(s)", "Vous et un ou plusieurs enfant(s)")] <- "Parent(s) avec enfants"
enq.final$D6_re2[as.character(enq.final$D6_re) %in% c("Autre (voir D6_other_re)","Vos parents et éventuels frères et sœurs")] <- "Autres"
enq.final$D6_re2[as.character(enq.final$D6_re) == "Vous et votre conjoint(e) (sans enfant)"] <- "Couples sans enfants"
summary(enq.final$D6_re2)
table(enq.final$D6_re2)
table(enq.final$D14)
table(enq.final$D13_re
table(enq.final$D13_re)
table(enq.final$D13_re)
table(enq.final$D12_re)
table(enq.final$D12_re)
enq.final$D12_re2 <- enq.final$D12_re
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 0 à 1 100€ /mois  (soit 0 à 14 000 € par an)", "De 1 100 à 1 400€ /mois  (soit 14 000 à 17 000 € par an)")] <- "moins de 1400"
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 1 400 à 1 700€ /mois  (soit 17 000 à 21 000 € par an)", "De 1 700 à 2 000€ /mois  (soit 21 000 à 25 000 € par an)")] <- "1400-2000"
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 2 000 à 2 500€ /mois  (soit 25 000 à 30 000 € par an)", "De 2 500 à 2 900€ /mois  (soit 30 000 à 35 000 € par an)")] <- "2000-2900"
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 2 900 à 3 400€ /mois  (soit 35 000 à 41 000 € par an)", "De 3 400 à 4 100€ /mois  (soit 41 000 à 50 000 € par an)")] <- "2900-4100"
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 4 100 à 5 300€ /mois  (soit 50 000 à 63 000 € par an)", "5 300€ et plus /mois  (soit 63 000 € et plus par an)")] <- "plus de 4100"
summary(enq.final$D12_re2)
table(enq.final$D12_re2)
enq.final$D12_re2 <- as.character(enq.final$D12_re)
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 0 à 1 100€ /mois  (soit 0 à 14 000 € par an)", "De 1 100 à 1 400€ /mois  (soit 14 000 à 17 000 € par an)")] <- "moins de 1400"
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 1 400 à 1 700€ /mois  (soit 17 000 à 21 000 € par an)", "De 1 700 à 2 000€ /mois  (soit 21 000 à 25 000 € par an)")] <- "1400-2000"
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 2 000 à 2 500€ /mois  (soit 25 000 à 30 000 € par an)", "De 2 500 à 2 900€ /mois  (soit 30 000 à 35 000 € par an)")] <- "2000-2900"
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 2 900 à 3 400€ /mois  (soit 35 000 à 41 000 € par an)", "De 3 400 à 4 100€ /mois  (soit 41 000 à 50 000 € par an)")] <- "2900-4100"
enq.final$D12_re2[as.character(enq.final$D12_re) %in% c("De 4 100 à 5 300€ /mois  (soit 50 000 à 63 000 € par an)", "5 300€ et plus /mois  (soit 63 000 € et plus par an)")] <- "plus de 4100"
summary(enq.final$D12_re2)
table(enq.final$D12_re2)
>>>>>>> master
