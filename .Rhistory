## Listes
maliste <- list(mensuration1=tailles,
mensuration2=poids)
maliste
maliste$mensuration1
maliste$mensuration2
## Data frames
ident <- paste("ID", 1:10, sep="")
data1 <- data.frame(tailles, poids, ident)
str(data1)
View(data1)
#Â Autre possibilitÃ© en donnant un nom diffÃ©rent aux colonnes
data2 <- data.frame(X=tailles, Y=poids, Z=ident)
# On peut aussi renommer aprÃ¨s coup
data3 <- data.frame(tailles, poids, ident)
names(data3) <- c("X", "Y", "Z")
str(data3)
## Indexation
# Une seule dimension
tailles
tailles[1]
tailles[c(1,3,10)]
# Deux dimensions
data1
data1[1,]
data1[1,1]
data1[1,2]
data1[,2]
data1[,3]
## Fonctions
help ("mean")
menage <- matrix (nrow = 4, ncol=4)
View(menage)
colnames(menage)<- ("" "Conjoint""nbPersonnes")
help(colnames)
colnames(menage)<- menage("","Chef","Conjoint","NbPersonnes")
View(menage)
colnames(menage)<- menage("","Chef","Conjoint","NbPersonnes")
x<- 5
x <- -8
rownames(menage)<- paste("menage_",1:4,"")
colnames(menage)<- ("Chef", "Conjoint", "NbPers")
colnames(menage)<- names("Chef", "Conjoint", "NbPers")
colnames(menage)<-colnames("Chef", "Conjoint", "NbPers")
Chef <- c(1200, 1180, 1750, 2100)
Conjoint <- c(1450, 1850, 1690, 0)
NbPersonnes <-c(4,2,3,2)
menage <- cbind(Chef,Conjoint,NbPersonnes)
colnames(menage)<-("Chef" "Conjoint" "NbPers")
colnames(menage)<-("Chef")
colnames(menage)<-("Chef""Conjoint""NbPersonnes")
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete)
menage <- matrix (nrow = 4, ncol=6)
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete)
menage <- matrix (nrow = 4, ncol=6)
rownames(menage)<- paste("menage_",1:4,"")
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete)
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
Chef <- c(1200, 1180, 1750, 2100)
Conjoint <- c(1450, 1850, 1690, 0)
NbPersonnes <-c(4,2,3,2)
menage <- cbind(Chef,Conjoint,NbPersonnes)
RevenuParTete <- (Conjoint +Chef)/NbPersonnes
menage <- cbind(Chef,Conjoint,NbPersonnes,RevenuParTete)
rownames(menage)<- paste("menage_",1:4,"")
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
?max
menage<-rbind (RevenuMax)
RevenuMax <- max(Chef)
menage<-rbind (RevenuMax)
menage<-bind (RevenuMax)
Chef <- c(1200, 1180, 1750, 2100)
Conjoint <- c(1450, 1850, 1690, 0)
NbPersonnes <-c(4,2,3,2)
RevenuParTete <- (Conjoint +Chef)/NbPersonnes
RevenuMax <- max(Chef)
menage <- cbind(Chef,Conjoint,NbPersonnes,RevenuParTete)
?radd
?add
?insert
View(menage)
drop(menage)
View(menage)
delete(menage)
delete.response(menage)
menage <- data.frame(Chef,Conjoint,NbPersonnes,RevenuParTete)
View(menage)
menage<-rbind(RevenuMax)
menage <- data.frame(Chef,Conjoint,NbPersonnes,RevenuParTete)
RevenuMin <- min(Chef)
<- max(Chef)
RevenuMax
RevenuMin
rownames(menage)<- paste("menage_",1:4,"")
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
deuxlignes<-data.frame(matrix(1,2,5))
names(deuxlignes)<-names(iris)
deuxlignes
reslign<-rbind(deuxlignes,iris)
head(reslign)
View(reslign)
View(reslign)
View(deuxlignes)
ConjointGagnePlus <- c(Conjoint>Chef)
ConjointGagnePlus
menage2<-rbind(menage,ConjointGagnePlus)
View(menage2)
menage2<-cbind(menage,ConjointGagnePlus)
menage<-cbind(menage,ConjointGagnePlus)
Chef2 <- c(NA, 1180, 1750, 2100)
Conjoint2 <- c(1450, NA, 1690, NA)
NbPersonnes2 <-c(4,2,3,2)
RevenuParTete2 <- (Conjoint2 +Chef2)/NbPersonnes2
RevenuParTete2 <- (Conjoint2 +Chef2)/NbPersonnes2
RevenuMax2 <- max(Chef2)
RevenuMin2 <- min(Chef2)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
View(menage2)
RevenuParTete2 <- sum(Conjoint2,Chef2,na.rm =TRUE)/NbPersonnes2
RevenuParTete2 <- sum(Conjoint2,Chef2,na.rm =TRUE)/NbPersonnes2
RevenuMax2 <- max(Chef2,na.rm=TRUE)
RevenuMin2 <- min(Chef2,na.rm=TRUE)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage<-cbind(menage2,ConjointGagnePlus2)
menage<-cbind(menage2,ConjointGagnePlus2,na.rm=TRUE)
menage<-cbind(menage2,ConjointGagnePlus2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
menage<-cbind(menage2,ConjointGagnePlus2)
View(menage2)
menage2<-cbind(menage2,ConjointGagnePlus2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage2<-cbind(menage2,ConjointGagnePlus2)
Chef <- c(1200, 1180, 1750, 2100)
Conjoint <- c(1450, 1850, 1690, 0)
NbPersonnes <-c(4,2,3,2)
RevenuParTete <- (Conjoint +Chef)/NbPersonnes
RevenuMax <- max(Chef)
RevenuMin <- min(Chef)
menage <- data.frame(Chef,Conjoint,NbPersonnes,RevenuParTete)
ConjointGagnePlus <- c(Conjoint>Chef)
menage<-cbind(menage,ConjointGagnePlus)
rownames(menage)<- paste("menage_",1:4,"")
colnames(menage)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
Chef2 <- c(NA, 1180, 1750, 2100)
Conjoint2 <- c(1450, NA, 1690, NA)
NbPersonnes2 <-c(4,2,3,2)
RevenuParTete2 <- sum(Conjoint2,Chef2,na.rm =TRUE)/NbPersonnes2
RevenuMax2 <- max(Chef2,na.rm=TRUE)
RevenuMin2 <- min(Chef2,na.rm=TRUE)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2,na.rm=TRUE)
menage2<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
ConjointGagnePlus2 <- c(lenght(Conjoint2>Chef2,na.rm=TRUE))
ConjointGagnePlus2 <- c((Conjoint2>Chef2,na.rm=TRUE))
na.rm=TRUE
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage2<-cbind(menage2,ConjointGagnePlus2)
na.rm=TRUE
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage2<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2,na.rm=TRUE)
menage2 <- data.frame(Chef2,Conjoint2,NbPersonnes2,RevenuParTete2)
ConjointGagnePlus2 <- c(Conjoint2>Chef2)
menage2<-cbind(menage2,ConjointGagnePlus2)
rownames(menage2)<- paste("menage_",1:4,"")
colnames(menage2)<-("Chef""Conjoint""NbPersonnes""RevenuParTete")
install.packages("GDAtools")
library(GDATools)
library(GDATools)
library(GDATools)
library("GDAtools", lib.loc="~/R/win-library/3.2")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library("GDAtools", lib.loc="~/R/win-library/3.2")
install.packages("GDAtools")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library(GDATools)
library(GDAtools)
library("GDAtools", lib.loc="~/R/win-library/3.2")
install.packages("GDAtools")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library(GDAtools)
install.packages("flashClust")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/flashClust_1.01-2.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/RtmpkZQcww/downloaded_packages/GDAtools_1.3.zip", repos = NULL, type = "win.binary")
library(flashClust)
library(stats)
library(flashClust)
library(GDAtools)
install.packages("tm")
install.packages("topicmodels")
install.packages("wordcloud")
install.packages("tm")
install.packages("C:/Users/sarah/AppData/Local/Temp/Rtmp2ztZnI/downloaded_packages/tm_0.6-2.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/Rtmp2ztZnI/downloaded_packages/topicmodels_0.2-2.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/sarah/AppData/Local/Temp/Rtmp2ztZnI/downloaded_packages/wordcloud_2.5.zip", repos = NULL, type = "win.binary")
lenght(1:70) "longueur de l'objet"
mean(1:70)
lenght(1:70) #longueur de l'objet
mean(1:70)
length(1:70) #longueur de l'objet
mean(1:70)
median(1:70)
seq(1,70, by=3, length =10)
seq(1,70,length =10)
length("bb",'cc,"dd')
length("bb","cc","dd")
length(c("bb","cc","dd"))
c("bb","cc","dd")=="Yvonne"
sexe <-c("H","F","F","H")
sexe.f <- factor(sexe)
sexe.f.b <- factor(c(2,1,1,2),labels=c("femme","homme"))
age <- c("34","43","56","45")
age <- as.numeric(age)
#associer un attribut
age
prenoms<-c("naouek","roger","monique", "redha")
names(age)<-prenoms
prenoms
age <- c("34","43","56","45")
age <- as.numeric(age)
age <- c("34","43","56","45")
age
prenoms<-c("naoufel","roger","monique", "redha")
names(age)<-prenoms
age
prenoms
age <- c("34","43","56","45")
age <- as.numeric(age)
#associer un attribut
age
prenoms<-c("naoufel","roger","monique", "redha")
names(age)<-prenoms
age
age["Naoufel"]
age["Naoufel"]
names(age)<-prenoms
age["Naoufel"]
age
age
prenoms<-c("naoufel","roger","monique", "redha")
names(age)<-prenoms
age["naoufel"]
mat.d[c(2,3),c(1,3)]
mat.a <- matrix(1:15,nrow=3)
mat.b <- matrix(1:15, nrow=3,ncol=4)
mat.c <-matrix(1:4,nrow=3,ncol=4)
mat.d <- matrix(1:4,nrow=3,ncol=4,byrow=T)
mat.d[c(2,3),c(1,3)]
library(foreign)
mydata = read.dta("http://dss.princeton.edu/training/Panel101.dta")
View(mydata)
View(mydata)
View(mydata)
mydata$time = ifelse(mydata$year >= 1994, 1, 0)
mydata$treated = ifelse(mydata$country == "E" |
mydata$country == "F" |
mydata$country == "G", 1, 0)
mydata$did = mydata$time * mydata$treated
didreg = lm(y ~ treated + time + did, data = mydata)
summary(didreg)
didreg1 = lm(y ~ treated*time, data = mydata)
summary(didreg1)
install.packages("igraph")
install.packages("sna")
install.packages("matrix")
install.packages("Matrix")
install.package("systemfit")
install.packages("systemfit")
install.packages("AER")
install.packages("plm")
install.packages("pglm")
install.packages("lfe")
n <- 100000
instr <-rnorm(n)
x<-4*instr+rnorm(n)
inobs <-rnorm(n)
y<- 4+x+7*inobs+rnorm(n)
summary(r1)
r1 <- lm(y~x+inobs)
summary(r1)
r2<-lm(y~x)
summary(r2)
n <- 100000
instr <-rnorm(n)
inobs <-rnorm(n)
x<-4*instr+5*inobs+rnorm(n)
y<- 4+x+7*inobs+rnorm(n)
#régresssion avec toute l'information
r1 <- lm(y~x+inobs)
summary(r1)
#régression sans toute l'information
r2<-lm(y~x)
summary(r2)
e1 <- lm(x~instr)
summary(e1)
e1 <- lm(x~instr)
summary(e1)
str(e1)
e2 <- lm(y~e1$fitted.values)
summary(e2)
library("foreign")
gm<- read.xport("C:/Users/sarah/Google Drive/Econométrie pour sociologues/L2_Variables_instrumentales/gm2.xpt")
str(gm)
gm2 <- gm[gm$DEMENAG==0,]
table(gm$NAI)
table(gm$NAIMN,gm$RET15)
prop.table(table(gm$NAIMN,gm$RET15))
prop.table(table(gm$NAIMN,gm$RET15),1)
naif<- lm(RET15~VRET15+S1,data=gm2)
naif
summary(naif)
e1<- lm(VRET15~VJANMAY+VJUNNOV+S1, data=gm2) #on remet toutes les variables explicatives
summary(e1)
e2 <- lm(gm2$RET15~e1$fitted.values+gm2$s1)
e2 <- lm(RET15~e1$fitted.values+s1, data=gm2[is.na(gm2$VRET15)==0,])
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2[is.na(gm2$VRET15)==0,])
gm2 <- gm[gm$DEMENAG==0 & gm$QUINZE==1 & is.na(gm$VJANMAY)==0,]
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2[is.na(gm2$VRET15)==0,])
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2,])
e2 <- lm(RET15~e1$fitted.values+S1, data=gm2)
summary(e2)
library(AER)
summary(iv)
iv <- ivreg(RET15~VRET15+S1|VJANMAY+VJUNNOV+S1, data=gm2)
summary(iv)
summary(iv,diagnostics = T)
gm3 <- gm[gm$DEMENAG==0 & gm$QUINZEB==1 & is.na(gm$VJANMAY)==0,]
str(gm3)
s1 <- lm (VRET15~VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor())
s1 <- lm (VRET15~VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor(AN),data=gm3)
str(s1)
summary(s1)
naive<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1,data=gm3)
naive<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1,data=gm3)
summary(naive)
iv<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1 +VJANMAY+VJUNNOV+JANMAY+JUNNOV
,data=gm3)
summary(iv)
iv<-lm (RET16~VRET15+RET15+factor(AN)+S1+ETR1|VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor(AN)
+S1+ETR1
,data=gm3)
iv<-ivreg (RET16~VRET15+RET15+factor(AN)+S1+ETR1|VJANMAY+VJUNNOV+JANMAY+JUNNOV+factor(AN)
+S1+ETR1
,data=gm3)
summary(iv)
rm(list=ls())
chemin <- "C:/Users/sarah/Desktop/Tele-Repas-Socstat"
setwd(chemin)
e<- read.csv2("./DATA_BDD-RECONCILIE/enq final_03.csv",encoding="UTF-8")
#INSTALLATION DU PACKAGE ICARUS
#install.packages("icarus")
library(icarus)
##Calage sur marge SEXE AGE CSP ##
###########ON NE PEUT PAS L'EXECUTER SUR L'ACTUEL BASE DE DONNEES ###########################
# il faut d'abord nettoyer et recoder les variables sexe, Ã¢ge et CSP #
ech <- data.frame(cbind(e[,"id_r"],e[,"D13_re"],e[,"age_calage"],e[,"D5_re"],1))
colnames(ech)<-c("id","sexe","age","csp","poids")
ech[,2]<- as.factor(ech[,2])
ech[,3]<-as.factor(ech[,3])
ech[,4]<-as.factor(ech[,4])
class(ech[,2])
class(ech[,3])
class(ech[,4])
class(ech[,5])
str(ech)
#suppression des NAs
ech<- na.omit(ech)
summary(ech[,"sexe"])
summary(ech[,"age"])
summary(ech[,"csp"])
ifelse(ech[,"age"]==2,ech[,"age"]==1)
levels(ech[,"age"])
levels(ech)[c(1,2)] <- "1"
levels(ech)[c(3)] <- "2"
levels(ech)[c(4)] <- "3"
levels(ech)[c(5)] <- "4"
ech <- data.frame(cbind(e[,"id_r"],e[,"D13_re"],e[,"age_calage"],e[,"D5_re"],1))
colnames(ech)<-c("id","sexe","age","csp","poids")
ech[,2]<- as.factor(ech[,2])
ech[,3]<-as.factor(ech[,3])
ech[,4]<-as.factor(ech[,4])
class(ech[,2])
class(ech[,3])
class(ech[,4])
class(ech[,5])
str(ech)
#suppression des NAs
ech<- na.omit(ech)
summary(ech[,"sexe"])
summary(ech[,"age"])
summary(ech[,"csp"])
levels(ech[,"age"])
levels(ech)[c(1,2)] <- "1"
levels(ech)[c(3)] <- "2"
levels(ech)[c(4)] <- "3"
levels(ech)[c(5)] <- "4"
levels(ech)[c(6,7)] <- "5"
summary(ech[,"age"])
levels(ech$age)[c(1,2)]
ech <- data.frame(cbind(e[,"id_r"],e[,"D13_re"],e[,"age_calage"],e[,"D5_re"],1))
colnames(ech)<-c("id","sexe","age","csp","poids")
ech[,2]<- as.factor(ech[,2])
ech[,3]<-as.factor(ech[,3])
ech[,4]<-as.factor(ech[,4])
class(ech[,2])
class(ech[,3])
class(ech[,4])
class(ech[,5])
str(ech)
#suppression des NAs
ech<- na.omit(ech)
summary(ech[,"sexe"])
summary(ech[,"age"])
summary(ech[,"csp"])
levels(ech[,"age"])
levels(ech$age)[c(1,2)] <- "1"
levels(ech$age)[c(3)] <- "2"
levels(ech$age)[c(4)] <- "3"
levels(ech$age)[c(5)] <- "4"
levels(ech$age)[c(6,7)] <- "5"
summary(ech[,"age"])
levels(ech$age)[c(1,2)]
ech$age
ech <- data.frame(cbind(e[,"id_r"],e[,"D13_re"],e[,"age_calage"],e[,"D5_re"],1))
colnames(ech)<-c("id","sexe","age","csp","poids")
ech[,2]<- as.factor(ech[,2])
ech[,3]<-as.factor(ech[,3])
ech[,4]<-as.factor(ech[,4])
class(ech[,2])
class(ech[,3])
class(ech[,4])
class(ech[,5])
str(ech)
#suppression des NAs
ech<- na.omit(ech)
summary(ech[,"sexe"])
summary(ech[,"age"])
levels(ech[,"age"])
levels(ech$age)
levels(ech$age)[c(1,2)]
levels(ech$age)[c(1,2)] <- "1"
levels(ech$age)
levels(ech$age)[c(2)] <- "2"
levels(ech$age)[c(3)] <- "3"
levels(ech$age)[c(4)] <- "4"
levels(ech$age)[c(5,6)] <- "5"
levels(ech$age)
summary(ech[,"age"])
ech <- data.frame(cbind(e[,"id_r"],e[,"D13_re"],e[,"age_calage"],e[,"D5_re"],1))
colnames(ech)<-c("id","sexe","age","csp","poids")
ech[,2]<- as.factor(ech[,2])
ech[,3]<-as.factor(ech[,3])
ech[,4]<-as.factor(ech[,4])
class(ech[,2])
class(ech[,3])
class(ech[,4])
class(ech[,5])
str(ech)
#suppression des NAs
ech<- na.omit(ech)
summary(ech[,"sexe"])
summary(ech[,"age"])
levels(ech[,"age"])
levels(ech$age)[c(1,2)] <- "1"
levels(ech$age)[c(2)] <- "2"
levels(ech$age)[c(3)] <- "3"
levels(ech$age)[c(4,5)] <- "4"
summary(ech[,"age"])
levels(ech$age)[c(1)]
levels(ech$age)[c(1)]<- "18-39"
levels(ech$age)[c(2)]<- "40-54"
levels(ech$age)[c(3)]<- "55-64"
levels(ech$age)[c(4)]<- "65+"
summary(ech[,"age"])
mar2 <- c("age",4,0.27,0.20,0.13,0.18)
marges2 <- rbind(mar2)
marges2
calibration(data=ech, marginMatrix=marges2,colWeights="poids",
method="raking",description=T,bounds=c(0.4,2.1),
popTotal=1,pct=T)
levels(ech$age)[c(1)]<- "18-39"
levels(ech$age)[c(2)]<- "40-54"
levels(ech$age)[c(3,4)]<- "55+"
mar2 <- c("age",4,0.27,0.20,0.31)
marges2 <- rbind(mar2)
marges2
calibration(data=ech, marginMatrix=marges2,colWeights="poids",
method="raking",description=T,bounds=c(0.4,2.1),
popTotal=1,pct=T)
mar2 <- c("age",3,0.27,0.20,0.31)
marges2 <- rbind(mar2)
marges2
calibration(data=ech, marginMatrix=marges2,colWeights="poids",
method="raking",description=T,bounds=c(0.4,2.1),
popTotal=1,pct=T)
